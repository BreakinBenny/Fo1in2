/*

   Masters Lair - Viscious

*/

/* Include Files */
#include "define.h"
//#include "area/necropolis.h"

#define NAME                    SCRIPT_MLOPS
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure damage_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;

procedure goto00;
procedure goto00a;
procedure goto01;
procedure goto02;
procedure goto03;
procedure goto03a;
procedure goto04;
procedure goto05;
procedure goto06;
procedure goto07;
procedure goto07a;
procedure goto08;
procedure gotoend;
procedure gotocbt;
procedure gotoret;

procedure moveme;

variable tmp_hostile;
variable Only_Once := 1;
variable moving := 1;
variable my_hex;
variable home_tile;
variable smoke_tile;
variable indlog;

procedure start begin
   if (local_var(4) == 0) then begin
      set_local_var(4, 1);
      set_local_var(5, 1);
      set_local_var(6, 0);
      set_local_var(7, 22091);
   end
   if Only_Once then begin
      Only_Once := 0;
      home_tile := 23488;
      smoke_tile := 21299;
      set_self_team(TEAM_NECROPOLIS_MUTANT);
      set_self_ai(AI_SUPER_MUTANT_SGT);
      if (local_var(0) == 1) then begin
         if not(is_loading_game) then set_self_invisible;
         moving := 0;
      end
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == 1) then begin
      moving := 1;
   end
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (local_var(0) != 1) then begin
      if (tmp_hostile) then begin
         tmp_hostile := 0;
         attack(dude_obj);
      end
      else if (moving) then begin
         call moveme;
      end
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(3)) then
      display_msg(mstr(302));
   else
      display_msg(mstr(200));
end

procedure damage_p_proc begin
   if (global_var(GVAR_MUTANTS_ENEMY_UNSURE) == 0) then begin
      set_global_var(GVAR_MUTANTS_ENEMY_UNSURE, 1);
   end
end

procedure destroy_p_proc begin
   set_local_var(0, 1);
   inc_inv_evil_crit
end

procedure talk_p_proc begin
   set_tma_data(tma_source_generic, TMA_MSG_MBASE, -1, -1, 997, 999);

   dude_look_at_self;

   indlog := 1;

   coc_disguise_check;
   if (not(DISGUISED) or dude_is_armed) then begin
      start_dialog_at_node(goto01);
   end
   else if (local_var(2) == 1) then begin
      start_dialog_at_node(goto08);
   end
   else begin
      set_local_var(2, 1);
      start_dialog_at_node(goto00);
   end
   indlog := 0;
end

procedure moveme begin
   my_hex := self_tile;
   if (my_hex == local_var(7)) then begin
      set_local_var(3, 0);
      if (local_var(5)) then begin
         set_local_var(6, local_var(6) + 1);
      end
      else
         set_local_var(6, local_var(6) - 1);

      if (local_var(6) > 2) then begin
         set_local_var(3, 1);
         moving := 0;
         set_local_var(6, 1);
         set_local_var(5, 0);
         add_timer_event(self_obj, game_ticks(180), 1);
      end
      else if (local_var(6) < 0) then begin
         moving := 0;
         set_local_var(6, 1);
         set_local_var(5, 1);
         add_timer_event(self_obj, game_ticks(600), 1);
      end

      if (local_var(6) == 0) then
         set_local_var(7, home_tile);
      else if (local_var(6) == 1) then
         set_local_var(7, 22091);
      else if (local_var(6) == 2) then
         set_local_var(7, smoke_tile);
   end
   else begin
      self_walk_to_tile(local_var(7));
   end

   if (self_can_see_dude) then begin
      coc_disguise_check;
      if (not(DISGUISED) or dude_is_armed) then begin
         if (tile_distance_objs(self_obj, dude_obj) < 6) then begin
            if (local_var(1) < 1) then begin
               set_local_var(1, 1);
               add_timer_event(self_obj, game_ticks(15), 2);
               dialogue_system_enter;
            end
         end
      end
   end
end

procedure goto00 begin
   Reply(202);
   BLowOption(203, goto01);
   BOption(204, goto02, 4);
   NOption(205, goto00a, 7);
   BOption(206, gotocbt, 4);
end

procedure goto00a begin
   if (dude_skill_success(SKILL_SPEECH, 0)) then begin
      call goto04;
   end
   else begin
      call goto03;
   end
end

procedure goto01 begin
   if (indlog) then
      BMessage(207);
   else
      float_msg(self_obj, mstr(207), FLOAT_MSG_RED);
   call gotocbt;
end

procedure goto02 begin
   BMessage(208);
   call gotocbt;
end

procedure goto03 begin
   Reply(209);
   BOption(210, gotocbt, 4);
   NOption(211, goto03a, 7);
end

procedure goto03a begin
   if (dude_skill_success(SKILL_SPEECH, -20)) then begin
      call goto04;
   end
   else begin
      call goto02;
   end
end

procedure goto04 begin
   Reply(212);
   NOption(213, gotoend, 7);
   NOption(214, goto05, 7);
end

procedure goto05 begin
   Reply(215);
   NOption(216, goto06, 7);
   BOption(217, goto07, 8);
end

procedure goto06 begin
   NMessage(218);
end

procedure goto07 begin
   Reply(219);
   NOption(220, goto07a, 4);
   BOption(221, gotocbt, 4);
end

procedure goto07a begin
   if (dude_skill_success(SKILL_SPEECH, 0)) then begin
      call goto06;
   end
   else begin
      call goto01;
   end
end

procedure goto08 begin
   if (indlog) then
      NMessage(222);
   else
      float_msg(self_obj, mstr(222), FLOAT_MSG_RED);
end

procedure gotoend begin
end

procedure gotocbt begin
   tmp_hostile := 1;
end

procedure gotoret begin
end
