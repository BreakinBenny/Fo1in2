/*

   Cathedral - Dane

*/

/* Include Files */
#include "define.h"
//#include "area/necropolis.h"

#define NAME                    SCRIPT_DANE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure talk_p_proc;
procedure social_skills;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure critter_p_proc;

procedure dane00;
procedure dane01;
procedure dane02;
procedure dane03;
procedure dane04;
procedure dane05;
procedure dane06;
procedure dane07;
procedure dane08;
procedure dane09;
procedure dane10;
procedure dane11;
procedure dane12;
procedure dane13;
procedure dane14;
procedure dane15;
procedure dane16;
procedure dane17;
procedure dane18;
procedure dane19;
procedure dane20;
procedure dane21;
procedure dane22;
procedure dane23;
procedure dane24;
procedure danemore;
procedure danereturn;

#define LVAR_OneQuestionOnly  (4)
#define LVAR_WantToDie        (5)
#define LVAR_Herebefore       (27)

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_CATHEDRAL);
      set_self_ai(AI_CHILDREN_TRUE);
   end
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure look_at_p_proc begin
   if not(local_var(LVAR_Herebefore)) then begin
      script_overrides;
      set_local_var(LVAR_Herebefore, 1);
      display_msg(mstr(100));
   end
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_COC);

   dude_look_at_self;
   get_reaction
   start_dialog(self_obj, 4);
   gsay_start;
   if (local_var(6) == 0) then begin
      call dane00;
   end
   else if (local_var(7) == 0) then begin
      call dane01;
   end
   else if (local_var(8) == 0) then begin
      call dane02;
   end
   else if (local_var(9) == 0) then begin
      call dane03;
   end
   else if (local_var(10) == 0) then begin
      call dane04;
   end
   else if (local_var(11) == 0) then begin
      call dane05;
   end
   else if (local_var(28) == 0) then begin
      call dane06;
   end
   else if (local_var(13) == 0) then begin
      call dane07;
   end
   else if (local_var(14) == 0) then begin
      call dane08;
   end
   else if (local_var(15) == 0) then begin
      call dane09;
   end
   else if (local_var(16) == 0) then begin
      call dane10;
   end
   else if (local_var(17) == 0) then begin
      call dane11;
   end
   else if (local_var(18) == 0) then begin
      call dane12;
   end
   else if (local_var(19) == 0) then begin
      call dane13;
   end
   else if (local_var(20) == 0) then begin
      call dane14;
   end
   else if (local_var(21) == 0) then begin
      call dane15;
   end
   else if (local_var(22) == 0) then begin
      call dane16;
   end
   else if (local_var(23) == 0) then begin
      call dane17;
   end
   else if (local_var(24) == 0) then begin
      call dane18;
   end
   else if (local_var(25) == 0) then begin
      call dane19;
   end
   else if (local_var(26) == 0) then begin
      call dane20;
   end
   else if (local_var(LVAR_WantToDie) == 1) then begin
      call dane24;
   end
   gsay_end;
   end_dialogue;
end

procedure social_skills begin
   script_overrides;
   get_reaction
   call talk_p_proc;
end

procedure dane00 begin
   set_local_var(6, 1);
   NMessage(101);
   NMessage(102);
   NMessage(103);
end

procedure dane01 begin
   set_local_var(7, 1);
   NMessage(104);
   NMessage(105);
   NMessage(106);
end

procedure dane02 begin
   set_local_var(8, 1);
   NMessage(107);
   NMessage(108);
   NMessage(109);
   NMessage(110);
end

procedure dane03 begin
   set_local_var(9, 1);
   NMessage(111);
   NMessage(112);
   NMessage(113);
end

procedure dane04 begin
   set_local_var(10, 1);
   NMessage(114);
   NMessage(115);
   NMessage(116);
   NMessage(117);
end

procedure dane05 begin
   set_local_var(11, 1);
   NMessage(118);
   NMessage(119);
   NMessage(120);
end

procedure dane06 begin
   set_local_var(28, 1);
   NMessage(121);
   NMessage(122);
   NMessage(123);
   NMessage(124);
end

procedure dane07 begin
   set_local_var(13, 1);
   NMessage(125);
   NMessage(126);
   NMessage(127);
end

procedure dane08 begin
   set_local_var(14, 1);
   NMessage(128);
   NMessage(129);
   NMessage(130);
   NMessage(131);
end

procedure dane09 begin
   set_local_var(15, 1);
   NMessage(132);
   NMessage(133);
   NMessage(134);
   NMessage(135);
end

procedure dane10 begin
   set_local_var(16, 1);
   NMessage(136);
   NMessage(137);
   NMessage(138);
end

procedure dane11 begin
   set_local_var(17, 1);
   NMessage(139);
   NMessage(140);
   NMessage(141);
   NMessage(142);
end

procedure dane12 begin
   set_local_var(18, 1);
   NMessage(143);
   NMessage(144);
   NMessage(145);
   NMessage(146);
end

procedure dane13 begin
   set_local_var(19, 1);
   NMessage(147);
   NMessage(148);
   NMessage(149);
   NMessage(150);
   NMessage(151);
end

procedure dane14 begin
   set_local_var(20, 1);
   NMessage(152);
   NMessage(153);
   NMessage(154);
   NMessage(155);
end

procedure dane15 begin
   set_local_var(21, 1);
   NMessage(156);
   NMessage(157);
   NMessage(158);
end

procedure dane16 begin
   NMessage(159);
   NMessage(160);
   NMessage(161);
   Reply(162);
   NOption(163, dane17, 7);
   NOption(164, dane18, 7);
   NOption(165, dane19, 4);
   NOption(166, dane20, 4);
   NOption(167, dane21, 4);
   NOption(168, dane22, 4);
   NLowOption(169, dane23);
end

procedure dane17 begin
   NMessage(170);
   NMessage(171);
   NMessage(172);
   if (local_var(LVAR_OneQuestionOnly) == 0) then begin
      set_local_var(LVAR_OneQuestionOnly, 1);
      Reply(173);
      NOption(174, dane18, 7);
      NOption(175, dane19, 4);
      NOption(176, dane20, 4);
      NOption(177, dane21, 4);
      NOption(178, dane22, 4);
   end
   else begin
      NMessage(179);
   end
end

procedure dane18 begin
   NMessage(180);
   NMessage(181);
   NMessage(182);
   NMessage(183);
   if (local_var(LVAR_OneQuestionOnly) == 0) then begin
      set_local_var(LVAR_OneQuestionOnly, 1);
      Reply(184);
      NOption(185, dane18, 7);
      NOption(186, dane19, 4);
      NOption(187, dane20, 4);
      NOption(188, dane21, 4);
      NOption(189, dane22, 4);
   end
   else begin
      NMessage(190);
   end
end

procedure dane19 begin
   if (local_var(LVAR_OneQuestionOnly) == 0) then begin
      set_local_var(LVAR_OneQuestionOnly, 1);
      Reply(191);
      NOption(192, dane18, 7);
      NOption(193, dane19, 4);
      NOption(194, dane20, 4);
      NOption(195, dane21, 4);
      NOption(196, dane22, 4);
   end
   else begin
      NMessage(197);
   end
end

procedure dane20 begin
   NMessage(198);
   if (local_var(LVAR_OneQuestionOnly) == 0) then begin
      set_local_var(LVAR_OneQuestionOnly, 1);
      Reply(199);
      NOption(200, dane19, 7);
      NOption(201, dane18, 7);
      NOption(202, dane19, 4);
      NOption(203, dane21, 4);
      NOption(204, dane22, 4);
      NLowOption(205, dane23);
   end
   else begin
      NMessage(206);
   end
end

procedure dane21 begin
   NMessage(207);
   if (local_var(LVAR_OneQuestionOnly) == 0) then begin
      set_local_var(LVAR_OneQuestionOnly, 1);
      Reply(208);
      NOption(209, dane19, 7);
      NOption(210, dane18, 7);
      NOption(211, dane19, 4);
      NOption(212, dane20, 4);
      NOption(213, dane22, 4);
      NLowOption(214, dane23);
   end
   else begin
      NMessage(215);
   end
end

procedure dane22 begin
   set_local_var(LVAR_WantToDie, 1);
   NMessage(216);
   NMessage(217);
   NMessage(218);
   NMessage(219);
end

procedure dane23 begin
   set_local_var(LVAR_WantToDie, 1);
   NMessage(220);
end

procedure dane24 begin
   NMessage(221);
end

procedure danemore begin
   NOption(222, danereturn, 1);
end

procedure danereturn begin
end

procedure destroy_p_proc begin
   inc_inv_evil_crit
end
