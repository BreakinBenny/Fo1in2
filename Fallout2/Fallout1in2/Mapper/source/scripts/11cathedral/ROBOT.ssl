/*

   Cathedral - Robots

*/

#include "define.h"

#define NAME                    SCRIPT_ROBOT

#include "command.h"

procedure start;
procedure talk_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;

procedure robot00;
procedure robot01;
procedure robot02;
procedure robotend;
procedure robotcbt;

#define LVAR_Disguise_Check      (1)

variable tmp_hostile;
variable Only_Once := 1;
variable again;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_MASTER_LAIR);
      set_self_ai(AI_ROBOTS);
   end
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   inc_local_var(LVAR_Disguise_Check);

   dude_look_at_self;
   coc_disguise_check;
   if (DISGUISED) then begin
      if (local_var(LVAR_Disguise_Check) < 2) then begin
         call robot00;
      end
      else begin
         call robot02;
      end
   end
   else begin
      call robot01;
   end
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (self_can_see_dude) then begin
         coc_disguise_check;
         if (not(DISGUISED) and (again == 0)) then begin
            if (tile_distance_objs(self_obj, dude_obj) < 6) then begin
               again := 1;
               dialogue_system_enter;
            end
         end
      end
   end
end

procedure robot00 begin
   float_msg(self_obj, mstr(100), FLOAT_MSG_LIGHT_RED);
end

procedure robot01 begin
   float_msg(self_obj, mstr(random(101, 104)), FLOAT_MSG_RED);
   call robotcbt;
end

procedure robot02 begin
   if (random(1, 2) == 1) then
      float_msg(self_obj, mstr(103), FLOAT_MSG_RED);
   else
      float_msg(self_obj, mstr(105), FLOAT_MSG_RED);
   call robotcbt;
end

procedure robotend begin
end

procedure robotcbt begin
   tmp_hostile := 1;
end
