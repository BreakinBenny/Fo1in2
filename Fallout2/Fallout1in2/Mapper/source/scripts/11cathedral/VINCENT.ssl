/*

   ??

*/

/* Include Files */
#include "define.h"
//#include "area/necropolis.h"

#define NAME                    SCRIPT_MADSCI
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure damage_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure vincent00;
procedure vincent01;
procedure vincent01n;
procedure vincent02;
procedure vincent02n;
procedure vincent03;
procedure vincent04;
procedure vincent05;
procedure vincday;
procedure vincnight;

procedure combat;
procedure check_status;

#define LVAR_FloatOnce              (5)
#define LVAR_Home_Tile              (7)
#define LVAR_Home_Rotation          (8)

variable tmp_hostile;
variable Only_Once := 1;
variable again;
variable home_tile;
variable sleep_tile;

#define alert_tile         (24714)

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_NECROPOLIS_MUTANT);
      set_self_ai(AI_SUPER_MUTANT_NORMAL);
      //home_tile := self_tile;
      //sleep_tile := 22284;
   end
end

procedure map_enter_p_proc begin
   if map_first_run then begin
      set_local_var(LVAR_Home_Tile, self_tile);
      set_local_var(LVAR_Home_Rotation, self_cur_rot);
   end
   home_tile := local_var(LVAR_Home_Tile);
   sleep_tile := 22284;
end

procedure map_exit_p_proc begin
   set_global_var(GVAR_CATHEDRAL_ALERT, 0);
end

procedure timed_event_p_proc begin
   call vincent03;
end

procedure combat begin
   tmp_hostile := 1;
end

procedure damage_p_proc begin
   if (global_var(GVAR_MUTANTS_ENEMY_UNSURE) == 0) then
      set_global_var(GVAR_MUTANTS_ENEMY_UNSURE, 1);
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin

      if (global_var(GVAR_CATHEDRAL_ALERT) > 0) then begin
         if not(combat_is_initialized) and (self_tile != alert_tile) then
            self_walk_to_tile(alert_tile);

         if (self_can_see_dude and tmp_hostile == 0) then begin
            float_msg(self_obj, mstr(202), FLOAT_MSG_RED);
            tmp_hostile := 1;
         end
      end
      else begin
         if (self_can_see_dude) then begin
            if (local_var(LVAR_FloatOnce) == 0) then begin
               set_local_var(LVAR_FloatOnce, 1);
               call talk_p_proc;
            end
            else begin
               call check_status;
               if (dude_is_armed or not(DISGUISED)) then begin
                  call vincent02;
               end
            end
         end
         else if day then begin
            if (local_var(6)) then begin
               set_local_var(6, 0);
               self_walk_to_tile(home_tile);
            end
            else if (self_tile != home_tile) then begin
               self_walk_to_tile(home_tile);
            end
         end
         else if (local_var(6)) then begin
            if (self_tile != sleep_tile) then begin
               self_walk_to_tile(sleep_tile);
            end
         end
         else begin
            set_local_var(6, 1);
            self_walk_to_tile(sleep_tile);
         end
      end

   end
end

procedure pickup_p_proc begin
   if source_is_dude then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   call check_status;
   if (dude_is_armed or not(DISGUISED)) then begin
      call vincent02;
   end
   else begin
      if (self_tile == sleep_tile) then
         call vincday;
      else
         call vincnight;
   end
end

procedure destroy_p_proc begin
   inc_inv_evil_crit
end

procedure look_at_p_proc begin
   script_overrides;
   if day then
      display_msg(mstr(400));
   else
      display_msg(mstr(200));
end

procedure check_status begin
   coc_disguise_check;
end

procedure vincday begin
   again := local_var(4);
   if (again == 0) then
      call vincent00;
   else if (again == 1) then
      call vincent01;
   else if (again > 1) then
      call vincent03;
   if (again < 2) then
      again := again + 1;
   set_local_var(4, again);
end

procedure vincnight begin
   again := local_var(4);
   if (again == 0) then
      call vincent01n;
   else if (again > 0) then
      call vincent02n;
   if (again < 2) then
      again := again + 1;
   set_local_var(4, again);
end

procedure vincent00 begin
   float_msg(self_obj, mstr(402), FLOAT_MSG_RED);
   add_timer_event(self_obj, game_ticks(30), 1);
end

procedure vincent01 begin
   float_msg(self_obj, mstr(403), FLOAT_MSG_RED);
   add_timer_event(self_obj, game_ticks(15), 1);
end

procedure vincent01n begin
   float_msg(self_obj, mstr(203), FLOAT_MSG_RED);
end

procedure vincent02 begin
   float_msg(self_obj, mstr(202), FLOAT_MSG_RED);
   call combat;
end

procedure vincent02n begin
   float_msg(self_obj, mstr(204), FLOAT_MSG_RED);
end

procedure vincent03 begin
   if (self_can_see_dude) then begin
      float_msg(self_obj, mstr(404), FLOAT_MSG_RED);
      call combat;
   end
end

procedure vincent04 begin
   float_msg(self_obj, mstr(203), FLOAT_MSG_RED);
end

procedure vincent05 begin
   float_msg(self_obj, mstr(204), FLOAT_MSG_RED);
end
