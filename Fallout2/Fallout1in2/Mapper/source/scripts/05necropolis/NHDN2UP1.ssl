/*

   Necropolis sewer hole, ladder in the tunnels - Included in NHDN2UP2.ssl and NDHN2UP3.ssl

*/

import variable Manhole_Pointer_Top;
import variable Use_Manhole_Top;
import variable Manhole_Pointer_Middle;
import variable Use_Manhole_Middle;
import variable Manhole_Pointer_Bottom;
import variable Use_Manhole_Bottom;

#include "define.h"

#ifndef NAME
   #define NAME                    SCRIPT_NHDN2UP1
   #define move_to_hex  (16307)
#endif

#include "command.h"
#include "area/necropolis.h"

/* Standard Script Procedures */
procedure start;

procedure use_top;
procedure use_middle;
procedure use_bottom;

procedure start begin
   if (script_action == use_proc) then begin
      if ((anim_busy(dude_obj) != 0) or (anim_busy(dude_obj) == 0)) then begin
         script_overrides;
         move_to(dude_obj, move_to_hex, 1);
         anim(source_obj, ANIM_stand, 0);
      end
   end
end

// Vanilla procedures, unused.
procedure use_top begin
   if ((anim_busy(dude_obj) != 0) or (anim_busy(dude_obj) == 0)) then begin
      script_overrides;
      if (self_pid == PID_SEWER_COVER) then begin
         if (Use_Manhole_Top) then begin
            Use_Manhole_Top := 0;
            self_stand;
         end
         else begin
            Use_Manhole_Top := 1;
            add_timer_event(self_obj, 7, 1);
            self_stand_reverse;
         end
      end
      else begin
         if (Use_Manhole_Top) then begin
            add_timer_event(self_obj, 7, 1);
         end
         else begin
            Use_Manhole_Top := 1;
            animate_stand_reverse_obj(Manhole_Pointer_Top);
            add_timer_event(self_obj, 7, 1);
         end
      end
   end
end

procedure use_middle begin
   if ((anim_busy(dude_obj) != 0) or (anim_busy(dude_obj) == 0)) then begin
      script_overrides;
      if (self_pid == PID_SEWER_COVER) then begin
         if (Use_Manhole_Middle) then begin
            Use_Manhole_Middle := 0;
            self_stand;
         end
         else begin
            Use_Manhole_Middle := 1;
            add_timer_event(self_obj, 7, 1);
            self_stand_reverse;
         end
      end
      else begin
         if (Use_Manhole_Middle) then begin
            add_timer_event(self_obj, 7, 1);
         end
         else begin
            Use_Manhole_Middle := 1;
            animate_stand_reverse_obj(Manhole_Pointer_Middle);
            add_timer_event(self_obj, 7, 1);
         end
      end
   end
end

procedure use_bottom begin
   if ((anim_busy(dude_obj) != 0) or (anim_busy(dude_obj) == 0)) then begin
      script_overrides;
      if (self_pid == PID_SEWER_COVER) then begin
         if (Use_Manhole_Bottom) then begin
            Use_Manhole_Bottom := 0;
            self_stand;
         end
         else begin
            Use_Manhole_Bottom := 1;
            add_timer_event(self_obj, 7, 1);
            self_stand_reverse;
         end
      end
      else begin
         if (Use_Manhole_Bottom) then begin
            add_timer_event(self_obj, 7, 1);
         end
         else begin
            Use_Manhole_Bottom := 1;
            animate_stand_reverse_obj(Manhole_Pointer_Bottom);
            add_timer_event(self_obj, 7, 1);
         end
      end
   end
end
