// UNUSED

#include "define.h"

#define NAME                    SCRIPT_SETDOOR1

#include "command.h"

procedure start;
procedure do_stuff;
procedure do_skill;
procedure see_stuff;
procedure doorend;

variable lockpicks;
variable testa;


procedure start begin
   if (script_action == look_at_proc) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
      script_overrides;
      call see_stuff;
   end
   else begin
      if (script_action == use_proc) then begin//use_p_proc - Use, Activate, or Manipulate the Object or Item
         script_overrides;
         call do_stuff;
      end
      else begin
         if (script_action == use_obj_on_proc) then begin//<-- use_obj_on_p_proc
            lockpicks := obj_being_used_with;
            script_overrides;
            call do_skill;
         end
      end
   end
end

procedure damage_p_proc begin
   if (weapon_dmg_type(target_obj) == DMG_explosion) then begin
      // TODO: ????
      debug("TODO");
   end
   else begin
      display_msg(message_str(SCRIPT_DOOR, 193));
   end
end

procedure do_stuff
begin
   display_msg(mstr(107));
end

procedure do_skill
begin
   if (has_skill(dude_obj, SKILL_LOCKPICK)) then begin
      testa := roll_vs_skill(dude_obj, SKILL_LOCKPICK, -10);
      if (is_success(testa)) then begin
         display_msg(mstr(100));
         set_local_var(0, 1);
      end
      else begin
         display_msg(mstr(101));
         if (is_critical(testa)) then begin
            display_msg(mstr(102));
            rm_obj_from_inven(dude_obj, lockpicks);
         end
      end
   end
   else begin
      display_msg(mstr(103));
   end
end

procedure see_stuff
begin
   if (local_var(0) == 0) then begin
      display_msg(mstr(104));
   end
   else begin
      if (local_var(2) == 1) then begin
         display_msg(mstr(105));
      end
      else begin
         display_msg(mstr(106));
      end
   end
end

procedure doorend
begin
end
