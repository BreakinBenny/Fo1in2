/*

   Brotherhood - Paul

*/

/* Include Files */
#include "define.h"
#include "area/brotherhood.h"

#define NAME                    SCRIPT_PAUL
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure Paul01;
procedure Paul02;
procedure Paul03;
procedure Paul04;
procedure Paul05;
procedure Paul06;
procedure Paul07;
procedure Paul08;
procedure Paul09;
procedure Paul10;
procedure Paul11;
procedure Paul12;
procedure Paul13;
procedure Paul14;
procedure Paul15;
procedure PaulEnd;

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_BROTHERHOOD);
      set_self_ai(AI_BROTHERHOOD_KNIGHT);
   end
end

procedure map_enter_p_proc begin
   check_bos_ca_enabled
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure pickup_p_proc begin
   if source_is_dude then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_BOS);

   dude_look_at_self;
   get_reaction
   if (local_var(4) == 0) then begin
      set_local_var(4, 1);
      start_dialog_at_node(Paul01);
   end
   else begin
      start_dialog_at_node(Paul14);
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure Paul01 begin
   Reply(101);
   NOption(102, Paul02, 4);
   NOption(103, Paul04, 4);
   if (map_var(0) == 1) then begin
      NOption(104, Paul07, 4);
   end
   if (global_var(GVAR_NECROP_WATER_CHIP_TAKEN) != 1) then begin
      NOption(105, Paul09, 4);
   end
   if (global_var(GVAR_BROTHER_BUILD_POWER_ARMOR) == 1) then begin
      NOption(106, Paul12, 4);
   end
   NOption(108, PaulEnd, 4);
   NLowOption(107, Paul15);
end

procedure Paul02 begin
   Reply(109);
   NOption(110, Paul03, 4);
   if (map_var(0) == 1) then begin
      NOption(111, Paul07, 4);
   end
end

procedure Paul03 begin
   Reply(112);
   NOption(113, Paul04, 4);
   NOption(114, PaulEnd, 4);
end

procedure Paul04 begin
   Reply(115);
   NOption(116, Paul05, 4);
   NOption(117, PaulEnd, 4);
end

procedure Paul05 begin
   Reply(118);
   NOption(119, Paul06, 4);
   NOption(120, PaulEnd, 4);
end

procedure Paul06 begin
   Reply(121);
   NOption(122, Paul04, 4);
   if (global_var(GVAR_NECROP_WATER_CHIP_TAKEN) != 1) then begin
      NOption(123, Paul09, 4);
   end
   if (global_var(GVAR_BROTHER_BUILD_POWER_ARMOR) == 1) then begin
      NOption(124, Paul12, 4);
   end
   if (map_var(0) == 1) then begin
      NOption(125, Paul07, 4);
   end
   NOption(126, PaulEnd, 4);
end

procedure Paul07 begin
   Reply(127);
   NOption(128, Paul08, 4);
   NOption(129, Paul11, 4);
end

procedure Paul08 begin
   Reply(130);
   NOption(131, Paul05, 4);
   NOption(132, PaulEnd, 4);
   NOption(133, Paul06, 4);
end

procedure Paul09 begin
   Reply(134);
   NOption(135, Paul10, 4);
end

procedure Paul10 begin
   Reply(136);
   NOption(138, Paul06, 4);
   NOption(137, PaulEnd, 4);
end

procedure Paul11 begin
   Reply(139);
   NOption(140, Paul08, 4);
end

procedure Paul12 begin
   Reply(141);
   NOption(142, Paul13, 4);
   NOption(143, PaulEnd, 4);
end

procedure Paul13 begin
   Reply(144);
   NOption(146, Paul06, 4);
   NOption(145, PaulEnd, 4);
end

procedure Paul14 begin
   Reply(mstr(147) + dude_name + mstr(148));
   NOption(149, Paul02, 4);
   NOption(150, Paul04, 4);
   if (map_var(0) == 1) then begin
      NOption(151, Paul07, 4);
   end
   if (global_var(GVAR_NECROP_WATER_CHIP_TAKEN) != 1) then begin
      NOption(152, Paul09, 4);
   end
   if (global_var(GVAR_BROTHER_BUILD_POWER_ARMOR) == 1) then begin
      NOption(153, Paul12, 4);
   end
   NOption(155, PaulEnd, 4);
   NLowOption(154, Paul15);
end

procedure Paul15 begin
   NMessage(156);
end

procedure PaulEnd begin
end
