/*

   Brotherhood - Random Knight

*/

/* Include Files */
#include "define.h"
#include "area/brotherhood.h"

#define NAME                    SCRIPT_RD1KNIG
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure say_something;

#define LVAR_Herebefore       (4)
#define LVAR_SaySomething     (5)

variable tmp_hostile;
variable Only_Once := 1;
variable message;

procedure start begin
   if Only_Once then begin
      set_self_team(TEAM_BROTHERHOOD);
      set_self_ai(AI_BROTHERHOOD_KNIGHT);
   end
end

procedure map_enter_p_proc begin
   check_bos_ca_enabled
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if REP_ENEMY_BOS then begin
      tmp_hostile := 1;
   end
   if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
      tmp_hostile := 0;
   end
   if (tmp_hostile) then begin
      set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (local_var(LVAR_SaySomething) == 0) then begin
         set_local_var(LVAR_SaySomething, 1);
         if (self_can_see_dude) then begin
            call say_something;
         end
      end
   end
end

procedure pickup_p_proc begin
   if source_is_dude then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   call say_something;
end

procedure destroy_p_proc begin
   set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(message_str(SCRIPT_RD1SCRB1, 100));
end

procedure say_something begin
   if (local_var(LVAR_Herebefore) == 0) then begin
      set_local_var(LVAR_Herebefore, 1);
      float_msg(self_obj, message_str(SCRIPT_RD1SCRB1, random(102, 113)), FLOAT_MSG_RED);
   end
   else begin
      float_msg(self_obj, message_str(SCRIPT_RD1SCRB1, 111), FLOAT_MSG_RED);
   end
end
