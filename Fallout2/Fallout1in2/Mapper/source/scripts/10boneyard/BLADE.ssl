#include "define.h"
#include "area/boneyard.h"

#define NAME                    SCRIPT_BLADE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"

procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;

#define LVAR_Home_Tile           (4)
#define LVAR_Home_Rotation       (5)

variable Only_Once := 1;
variable PsstTime;

procedure push_p_proc begin
end

procedure Start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_LA_BLADES);
      set_self_ai(AI_BLADES);
      add_timer_event(self_obj, game_ticks(random(3, 5)), 1);
   end
end

procedure map_enter_p_proc begin
   if map_first_run then begin
      self_caps_adjust(random(10, 100));

      set_local_var(LVAR_Home_Tile, self_tile);
      set_local_var(LVAR_Home_Rotation, self_cur_rot);
   end

   if (days_since_visited > 2) then begin
      critter_attempt_placement(self_obj, local_var(LVAR_Home_Tile), self_elevation);
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure talk_p_proc begin
   dude_look_at_self;
   if REP_ENEMY_LA_BLADES then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
   end
   else if get_blades_attack_finished then begin
      float_msg(self_obj, mstr(random(101, 115)), FLOAT_MSG_NORMAL);
   end
   else begin
      float_msg(self_obj, mstr(random(101, 111)), FLOAT_MSG_NORMAL);
   end
end

procedure critter_p_proc begin
   variable LVar0 := 0;
   LVar0 := global_var(GVAR_BLADE_SOMETHING_0);
   if ((((game_time / 10) - LVar0) >= 10) and (tile_distance_objs(self_obj, dude_obj) <= 4) and not(REP_ENEMY_LA_BLADES)) then begin
      if get_blades_attack_finished then begin
         float_msg(self_obj, mstr(random(101, 115)), FLOAT_MSG_NORMAL);
      end
      else begin
         float_msg(self_obj, mstr(random(101, 111)), FLOAT_MSG_NORMAL);
      end
      LVar0 := game_time / 10;
      set_global_var(GVAR_BLADE_SOMETHING_0, LVar0);
   end
   if (self_can_see_dude) then begin
      if REP_ENEMY_LA_BLADES then begin
         attack(dude_obj);
      end
   end
end

procedure damage_p_proc begin
   if source_is_dude then begin
      set_global_var(GVAR_ENEMY_BLADES, 1);
   end
end

procedure destroy_p_proc begin
   if source_is_dude then begin
      set_global_var(GVAR_ENEMY_BLADES, 1);
   end
   inc_good_critter
end

procedure timed_event_p_proc begin
   variable LVar0 := 0;

   if not(combat_is_initialized) then begin
      LVar0 := tile_num_in_direction(local_var(LVAR_Home_Tile), random(0, 5), random(1, 5));
      self_walk_to_tile(LVar0);
   end
   add_timer_event(self_obj, game_ticks(random(8, 25)), 1); // was random(3, 5)
end

procedure pickup_p_proc begin
   set_global_var(GVAR_ENEMY_BLADES, 1);
end
