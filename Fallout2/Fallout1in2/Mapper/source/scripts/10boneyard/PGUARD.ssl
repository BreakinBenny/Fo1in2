/*

   Boneyard - Regulator guard standing behind Jon Zimmermann

*/

/* Include Files */
#include "define.h"
#include "maps/laadytum.h"
#include "area/boneyard.h"

#define NAME                    SCRIPT_PGUARD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure use_obj_on_p_proc;
procedure timed_event_p_proc;

import variable JonPtr;

variable Only_Once := 1;
variable PsstTime;
variable tmp_hostile;

procedure Start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_LA_REGULATORS);
      set_self_ai(AI_REGULATORS);

      add_timer_event(self_obj, game_ticks(random(1, 3)), 1);

      if (local_var(5) == 0) then begin
         inc_map_var(MVAR_RegulatorCount);
         set_local_var(5, 1);
      end
   end
end

procedure map_enter_p_proc begin
   if map_first_run then
      self_caps_adjust(random(1, 10));
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(message_str(SCRIPT_REGULATR, 100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(message_str(SCRIPT_REGULATR, 100));
end

procedure talk_p_proc begin
   dude_look_at_self;
   if (REP_ENEMY_LA_ADYTUM or REP_ENEMY_LA_REGULATORS) then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
   end
   else begin
      float_msg(self_obj, message_str(SCRIPT_REGULATR, random(134, 138)), FLOAT_MSG_NORMAL);
   end
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (REP_ENEMY_LA_ADYTUM or REP_ENEMY_LA_REGULATORS) then begin
         attack(dude_obj);
      end
   end
   if ((((game_time / 10) - PsstTime) >= 30) and (tile_distance_objs(self_obj, dude_obj) <= 4) and not(REP_ENEMY_LA_ADYTUM) and not(REP_ENEMY_LA_REGULATORS)) then begin
      float_msg(self_obj, message_str(SCRIPT_REGULATR, random(134, 138)), FLOAT_MSG_NORMAL);
      PsstTime := game_time / 10;
   end
end

procedure damage_p_proc begin
   if source_is_dude then begin
      set_global_var(GVAR_DUDE_ENEMY_REGULATORS, 1);
   end
end

procedure destroy_p_proc begin
   if source_is_dude then begin
      set_global_var(GVAR_DUDE_ENEMY_REGULATORS, 1);
   end
   inc_evil_critter

   dec_map_var(MVAR_RegulatorCount);
   if (map_var(MVAR_RegulatorCount) == 0) then begin
      terminate_combat;
   end
end

procedure pickup_p_proc begin
   set_global_var(GVAR_DUDE_ENEMY_REGULATORS, 1);
end

procedure use_obj_on_p_proc begin
   set_global_var(GVAR_DUDE_ENEMY_REGULATORS, 1);
end

procedure timed_event_p_proc begin
   if (get_zimmermann_turned or get_blades_attacking) then begin
      if (local_var(4) == 0) then begin
         set_local_var(4, 1);
         float_msg(self_obj, message_str(SCRIPT_REGULATR, 139), FLOAT_MSG_RED);
         attack_complex(JonPtr, 0, 1, 100, 250, 300, 0, 128); // The guard will always kill Zimmermann!
      end
   end
   else
      add_timer_event(self_obj, game_ticks(random(1, 3)), 1);
end
