/*

   Boneyard - Amber, FoA

   Cut-Content

*/

/* Include Files */
#include "define.h"
//#include "area/necropolis.h"

#define NAME                    SCRIPT_AMBER
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;

procedure Amber0;
procedure Amber1;
procedure Amber2;
procedure Amber3;
procedure Amber3a;
procedure Amber4;
procedure Amber5;
procedure Amber6;
procedure Amber7;
procedure Amber8;
procedure Amber9;
procedure Amber10;
procedure Amber11;
procedure Amber12;
procedure Amber13;
procedure Amber14;
procedure Amber15;
procedure Amber16;
procedure Amber17;
procedure Amber18;
procedure AmberEnd;

variable initial := 0;

procedure start begin
   if not(initial) then begin
      set_self_team(TEAM_LA_FOLLOWERS);
      initial := 1;
   end
end

procedure critter_p_proc
begin
   if (global_var(GVAR_QUEST_BONEYARD_3_BOMBFOLL) == 2) then begin
      kill_critter(self_obj, ANIM_exploded_to_nothing_sf);
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc
begin
   script_overrides;
   display_msg(mstr(100));
end

procedure talk_p_proc
begin
   script_overrides;
   dude_look_at_self;
   if (followers_trained) then begin
      call Amber18;
   end
   else begin
      if day then begin
         call Amber0;
      end
      else begin
         set_local_var(0, local_var(0) + 1);
         start_gdialog(272, self_obj, 4, -1, -1);
         gsay_start;
         call Amber1;
         gsay_end;
         end_dialogue;
      end
   end
end

procedure Amber0
begin
   float_msg(self_obj, mstr(101), FLOAT_MSG_NORMAL);
end

procedure Amber1
begin
   Reply(102);
   NOption(103, Amber2, 4);
   NOption(104, Amber3, 4);
   NOption(105, Amber17, 7);
end

procedure Amber2
begin
   NMessage(106);
end

procedure Amber3
begin
   Reply(107);
   if (not(local_var(1))) then begin
      NOption(108, Amber4, 4);
   end
   NOption(109, AmberEnd, 4);
   if (local_var(2) == 0) then begin
      NOption(110, Amber3a, 4);
   end
   NOption(111, Amber16, 5);
end

procedure Amber3a
begin
   if (local_var(0) < 6) then begin
      call Amber9;
   end
   else begin
      if (local_var(0) == 6) then begin
         call Amber10;
      end
      else begin
         call Amber15;
      end
   end
end

procedure Amber4
begin
   Reply(112);
   NOption(113, Amber5, 4);
   NOption(114, Amber8, 4);
   NOption(115, AmberEnd, 5);
end

procedure Amber5
begin
   Reply(116);
   NOption(117, Amber6, 4);
   NOption(118, Amber7, 4);
end

procedure Amber6
begin
   variable LVar0 := 0;
   set_local_var(1, local_var(1) + 1);
   NMessage(119);
   gfade_out(1);
   game_time_advance(game_ticks(LVar0));
   gfade_in(1);
   LVar0 := 3600 * 9;
   critter_mod_skill(dude_obj, SKILL_OUTDOORSMAN, 15);
   NMessage(120);
   display_msg(gen_mstr(116) + 15 + gen_mstr(134));
end

procedure Amber7
begin
   NMessage(121);
end

procedure Amber8
begin
   variable LVar0 := 0;
   set_local_var(1, local_var(1) + 1);
   NMessage(122);
   gfade_out(1);
   gfade_in(1);
   LVar0 := 3600 * 7;
   game_time_advance(game_ticks(LVar0));
   critter_mod_skill(dude_obj, SKILL_OUTDOORSMAN, 15);
   NMessage(123);
   display_msg(gen_mstr(116) + 15 + gen_mstr(134));
end

procedure Amber9
begin
   NMessage(124);
end

procedure Amber10
begin
   set_local_var(2, local_var(2) + 1);
   Reply(125);
   NOption(126, Amber11, 4);
   NOption(127, Amber12, 4);
   NOption(128, Amber13, 4);
   NOption(129, Amber14, 4);
end

procedure Amber11
begin
   variable LVar0 := 0;
   NMessage(130);
   LVar0 := 3600 * 10;
   gfade_out(1);
   gfade_in(1);
   game_time_advance(game_ticks(LVar0));
   critter_mod_skill(dude_obj, SKILL_SNEAK, 12);
   critter_mod_skill(dude_obj, SKILL_LOCKPICK, 10);
   critter_mod_skill(dude_obj, SKILL_STEAL, 8);
   critter_mod_skill(dude_obj, SKILL_TRAPS, 8);
   NMessage(131);
   display_msg(gen_mstr(116) + 12 + gen_mstr(125));
   display_msg(gen_mstr(116) + 10 + gen_mstr(126));
   display_msg(gen_mstr(116) + 8 + gen_mstr(127));
   display_msg(gen_mstr(116) + 8 + gen_mstr(128));
end

procedure Amber12
begin
   variable LVar0 := 0;
   NMessage(132);
   LVar0 := 3600 * 10;
   gfade_out(1);
   gfade_in(1);
   game_time_advance(game_ticks(LVar0));
   critter_mod_skill(dude_obj, SKILL_UNARMED_COMBAT, 10);
   critter_mod_skill(dude_obj, SKILL_SMALL_GUNS, 8);
   critter_mod_skill(dude_obj, SKILL_THROWING, 8);
   critter_mod_skill(dude_obj, SKILL_MELEE, 6);
   NMessage(133);
   display_msg(gen_mstr(116) + 10 + gen_mstr(120));
   display_msg(gen_mstr(116) + 8 + gen_mstr(117));
   display_msg(gen_mstr(116) + 8 + gen_mstr(122));
   display_msg(gen_mstr(116) + 6 + gen_mstr(121));
end

procedure Amber13
begin
   variable LVar0 := 0;
   NMessage(134);
   LVar0 := 3600 * 10;
   gfade_out(1);
   gfade_in(1);
   game_time_advance(game_ticks(LVar0));
   critter_mod_skill(dude_obj, SKILL_OUTDOORSMAN, 10);
   critter_mod_skill(dude_obj, SKILL_SNEAK, 8);
   critter_mod_skill(dude_obj, SKILL_THROWING, 8);
   critter_mod_skill(dude_obj, SKILL_TRAPS, 6);
   NMessage(135);
   display_msg(gen_mstr(116) + 10 + gen_mstr(134));
   display_msg(gen_mstr(116) + 8 + gen_mstr(125));
   display_msg(gen_mstr(116) + 8 + gen_mstr(122));
   display_msg(gen_mstr(116) + 6 + gen_mstr(128));
end

procedure Amber14
begin
   variable LVar0 := 0;
   NMessage(136);
   LVar0 := 3600 * 10;
   gfade_out(1);
   gfade_in(1);
   game_time_advance(game_ticks(LVar0));
   critter_mod_skill(dude_obj, SKILL_BARTER, 10);
   critter_mod_skill(dude_obj, SKILL_SPEECH, 8);
   critter_mod_skill(dude_obj, SKILL_GAMBLING, 8);
   critter_mod_skill(dude_obj, SKILL_MELEE, 6);
   NMessage(137);
   display_msg(gen_mstr(116) + 10 + gen_mstr(132));
   display_msg(gen_mstr(116) + 8 + gen_mstr(131));
   display_msg(gen_mstr(116) + 8 + gen_mstr(133));
   display_msg(gen_mstr(116) + 6 + gen_mstr(121));
end

procedure Amber15
begin
   NMessage(138);
end

procedure Amber16
begin
   NMessage(139);
end

procedure Amber17
begin
   Reply(140);
   if (local_var(2) == 0) then begin
      NOption(141, Amber10, 7);
   end
   NOption(142, AmberEnd, 7);
   if (not(local_var(1))) then begin
      NOption(143, Amber4, 6);
   end
end

procedure Amber18
begin
   float_msg(self_obj, mstr(144), FLOAT_MSG_NORMAL);
end

procedure AmberEnd
begin
end
