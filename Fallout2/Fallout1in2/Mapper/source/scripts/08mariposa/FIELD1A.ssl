/*

   Military Base - Force Field

   NOTE:

      Template script!
      This is included in other MBase Force Field (field) scripts.

   FIXME:

      If global force fields are disabled and the player uses repair on an
      emitter, the force field will boot up, but disappear again on next
      natural map_update cycle. No idea why this is happening.

*/

#include "define.h"
#include "area/mbase.h"
//#include "maps/mbstrg12.h"

#ifndef NAME
   #define NAME                     SCRIPT_FIELD1A
   #define FField_Ptr               Field1a_Ptr
   #define FField_MVAR              16
#endif

#include "command.h"

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;

#define DISABLED              (0)
#define ENABLED               (1)
#define FORCE_DISABLED        (2)
#define FORCE_ENABLED         (3)

#define EVENT_CHECK_STATUS    (1)

#define LVAR_Initial          (0)
#define LVAR_Timed_Event      (1)
#define LVAR_AlarmEnabled     (2)

import variable FField_Ptr;

procedure start begin
end

procedure map_enter_p_proc begin
   FField_Ptr := self_obj;
   if mbase_full_alert then begin
      if not(is_loading_game) then set_self_visible;
      set_force_fields_on;
      set_map_var(FField_MVAR, ENABLED);
   end
   if (get_force_fields_off or (map_var(FField_MVAR) == 0)) then begin
      if not(is_loading_game) then set_self_invisible;
   end
   flush_add_timer_event(self_obj, 1, EVENT_CHECK_STATUS);
end

procedure map_update_p_proc begin
variable FField_State := DISABLED;
   FField_Ptr := self_obj;

   // If the base is in high alert, we enable all force fields once.
   if mbase_full_alert then begin
      if (local_var(LVAR_AlarmEnabled) == 0) then begin
         set_local_var(LVAR_AlarmEnabled, 1);
         set_force_fields_on;
      end
   end

   if get_force_fields_on then FField_State := ENABLED;
   if get_force_fields_off then FField_State := DISABLED;

   if (map_var(FField_MVAR) == FORCE_DISABLED) then FField_State := DISABLED;
   if (map_var(FField_MVAR) == FORCE_ENABLED) then FField_State := ENABLED;

   if (FField_State == ENABLED) and not(self_visible) then begin
      set_self_visible;
      if (map_var(FField_MVAR) != FORCE_ENABLED) then set_map_var(FField_MVAR, ENABLED);
   end
   else if (FField_State == DISABLED) and self_visible then begin
      set_self_invisible;
      if (map_var(FField_MVAR) != FORCE_DISABLED) then set_map_var(FField_MVAR, DISABLED);
   end

   // If pixote's animated force field mod is enabled
   if (anim_busy(self_obj) == false) then begin
      reg_anim_begin();
      reg_anim_animate_forever(self_obj, ANIM_stand);
      reg_anim_end();
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == EVENT_CHECK_STATUS) then begin
      call map_update_p_proc;
   end
   flush_add_timer_event(self_obj, 1, EVENT_CHECK_STATUS);
end

