/*

   Hub - Fry, Hub Police

*/

/* Include Files */
#include "define.h"
//#include "area/necropolis.h"

#define NAME                    SCRIPT_FRY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;

procedure FryDialog;
procedure FryCombat;
procedure FryEnd;
procedure Fry00;
procedure Fry01;
procedure Fry02;
procedure Fry03;
procedure Fry04;
procedure Fry05;
procedure Fry06;
procedure Fry07;
procedure Fry08;
procedure Fry09;
procedure Fry10;
procedure Fry11;
procedure Fry12;
procedure Fry13;
procedure Fry14;
procedure Fry15;
procedure Fry16;
procedure Fry17;
procedure Fry18;
procedure Fry19;
procedure Fry20;
procedure Fry21;
procedure Fry22;
procedure Fry23;
procedure Fry24;

#define LVAR_Herebefore       (4)

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      if (global_var(GVAR_FRY_DEAD) == 1) then begin
         if not(is_loading_game) then set_self_invisible;
      end
      set_self_team(TEAM_HUB_POLICE);
      set_self_ai(AI_HUB_POLICE);
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   if (morning or day) then begin
      if (self_tile != 21508) then begin
         self_walk_to_tile(21508);
      end
      else if (random(1, 150) == 1) then begin
         self_walk_to_tile(tile_num_in_direction(self_tile, random(0, 5), random(3, 5)));
      end
   end
   else if (self_tile != 22280) then begin
      self_walk_to_tile(22280);
   end
end

procedure pickup_p_proc begin
   if source_is_dude then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   get_reaction
   call FryDialog;
end

procedure destroy_p_proc begin
   inc_good_critter
   set_global_var(GVAR_FRY_DEAD, 1);
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure damage_p_proc begin
   if source_is_dude then begin
      set_global_var(GVAR_ENEMY_HUB, 1);
   end
end

procedure FryDialog begin
   set_tma_data_generic(TMA_MSG_HUBENT);

   if (evening or night) then begin
      float_msg(self_obj, mstr(146), FLOAT_MSG_GREEN);
   end
   else begin
      start_gdialog(NAME, self_obj, 4, -1, -1);
      gsay_start;
      if (global_var(GVAR_WANTED_FOR_MURDER) > 2) then begin
         call Fry11;
      end
      else if (global_var(GVAR_GREENE_DEAD) == 1) then begin
         call Fry12;
      end
      else if (global_var(GVAR_WANTED_THEFT) > 2) then begin
         call Fry13;
      end
      else if (local_var(LVAR_Herebefore) == 0) then begin
         call Fry00;
         set_local_var(LVAR_Herebefore, 1);
      end
      else if has_rep_childkiller then begin
         call Fry10;
      end
      else if good_critter_reaction then begin
         call Fry14;
      end
      else if neutral_critter_reaction then begin
         call Fry15;
      end
      else begin
         call Fry16;
      end
      gsay_end;
      end_dialogue;
   end
end

procedure FryCombat begin
   tmp_hostile := 1;
end

procedure FryEnd begin
end

procedure Fry00 begin
   if has_rep_childkiller then begin
      Reply(101);
   end
   else begin
      Reply(102);
      NOption(103, Fry01, 4);
   end
   NOption(104, FryEnd, 4);
   NLowOption(105, Fry09);
   NLowOption(106, Fry09);
end

procedure Fry01 begin
   Reply(107);
   NOption(108, Fry02, 4);
   NOption(109, Fry03, 4);
end

procedure Fry02 begin
   set_global_var(GVAR_DECKER_KNOWN, 1);
   Reply(110);
   if (global_var(GVAR_MISSING_CARAVAN) != 2) then begin
      set_global_var(GVAR_MISSING_CARAVAN, 1);
   end
   call Fry05;
end

procedure Fry03 begin
   set_global_var(GVAR_DECKER_KNOWN, 1);
   Reply(111);
   if (global_var(GVAR_MISSING_CARAVAN) != 2) then begin
      set_global_var(GVAR_MISSING_CARAVAN, 1);
   end
   NOption(112, Fry07, 4);
   NOption(113, Fry04, 4);
   NOption(114, Fry06, 4);
   NOption(115, Fry21, 4);
   if looking_for_waterchip then begin
      NOption(147, Fry23, 4);
   end
   NOption(116, Fry08, 4);
end

procedure Fry04 begin
   Reply(117);
   call Fry05;
end

procedure Fry05 begin
   if (global_var(GVAR_DECKER_KNOWN) == 1) then begin
      NOption(112, Fry07, 4);
   end
   if (global_var(GVAR_MISSING_CARAVAN) == 1) then begin
      NOption(114, Fry06, 4);
   end
   NOption(115, Fry21, 4);
   if looking_for_waterchip then begin
      NOption(147, Fry23, 4);
   end
   NOption(116, Fry08, 4);
end

procedure Fry06 begin
   Reply(118);
   call Fry05;
end

procedure Fry07 begin
   Reply(119);
   call Fry05;
end

procedure Fry08 begin
   NMessage(120);
   call FryEnd;
end

procedure Fry09 begin
   NMessage(121);
   call FryEnd;
end

procedure Fry10 begin
   NMessage(122);
   call FryEnd;
end

procedure Fry11 begin
   NMessage(123);
   call FryCombat;
end

procedure Fry12 begin
   NMessage(124);
   call FryEnd;
end

procedure Fry13 begin
   Reply(125);
   call FryCombat;
end

procedure Fry14 begin
   if (dude_is_male) then begin
      Reply(130);
   end
   else begin
      Reply(131);
   end
   call Fry17;
end

procedure Fry15 begin
   Reply(132);
   call Fry17;
end

procedure Fry16 begin
   Reply(133);
   call Fry17;
end

procedure Fry17 begin
   if looking_for_waterchip then begin
      NOption(147, Fry24, 4);
   end
   GOption(134, Fry18, 4);
   NOption(135, Fry19, 4);
   NOption(136, Fry20, 4);
   GOption(137, Fry21, 4);
   NOption(138, FryEnd, 4);
   NLowOption(139, Fry09);
   NLowOption(140, Fry09);
end

procedure Fry18 begin
   Reply(141);
   call Fry17;
end

procedure Fry19 begin
   Reply(142);
   call Fry17;
end

procedure Fry20 begin
   Reply(143);
   call Fry17;
end

procedure Fry21 begin
   Reply(144);
   call Fry17;
end

procedure Fry22 begin
   NMessage(145);
   call FryEnd;
end

procedure Fry23 begin
   Reply(148);
   call Fry05;
end

procedure Fry24 begin
   Reply(148);
   call Fry17;
end
