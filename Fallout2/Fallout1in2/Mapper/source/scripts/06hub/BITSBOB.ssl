/*

   Hub - Bob

*/

/* Include Files */
#include "define.h"
#include "maps/hubdwntn.h"

#define NAME                    SCRIPT_BITSBOB
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

procedure BobStandardQuestions;
procedure BobBlackmailQuestions;
procedure BBQa;
procedure Bob00;
procedure Bob01;
procedure Bob01a;
procedure Bob02;
procedure Bob03;
procedure Bob04;
procedure Bob05;
procedure Bob06;
procedure Bob07;
procedure Bob08;
procedure Bob09;
procedure Bob09a;
procedure Bob09b;
procedure Bob09c;
procedure Bob09d;
procedure Bob10;
procedure Bob11;
procedure Bob12;
procedure Bob13;
procedure Bob14;
procedure Bob15;
procedure Bob16;
procedure Bob18;
procedure Bob19;
procedure Bob20;
procedure Bob20a;
procedure Bob21;
procedure Bob22;
procedure Bob23;
procedure Bob25;
procedure Bob27;
procedure Bob28;
procedure Bob30;
procedure Bob31;
procedure Bob32;
procedure Bob33;
procedure Bob34;
procedure Bob35;
procedure Bob36;
procedure Bob38;
procedure Bob39;
procedure Bob42;
procedure Bob43;
procedure Bob44;
procedure Bob44a;
procedure Bob44b;
procedure Bob44c;
procedure Bob44d;
procedure Bob44e;
procedure Bob45;
procedure Bob46;
procedure Bob47;
procedure Bob48;
procedure Bob49;
procedure Bob50;
procedure Bob51;
procedure BobEnd;
procedure BobCombat;

/*
dialogs for Fallout Fixt:
*/
procedure Bob11a;
procedure Bob51;
procedure Bob52;
procedure Bob53;
procedure Bob54;
procedure Bob55;
procedure BobInJail01;
procedure BobInJail02;
procedure BobInJail03;

#define LVAR_Blackmail_Caps   (7)

#define bob_jail_hex    (23065)

variable tmp_hostile;
variable Only_Once := 1;
variable ToldRumor1;
variable ToldRumor2;
variable ToldRumor3;
variable ToldRumor4;
variable ToldRumor5;

import variable BitsBob_Ptr;
import variable BitsBob_Dialog_Ptr;
import variable BitsBob_Stand_Ptr;

procedure start begin
   if Only_Once then begin
      set_self_team(TEAM_JUNKTOWN_MORBID);
      set_self_ai(AI_MERCHANT);
      Only_Once := 0;
   end
end

procedure map_update_p_proc begin
   if (global_var(GVAR_BITS_BOB_REPORTED) >= 2) and not(global_var(GVAR_BITS_BOB_IN_JAIL)) then begin
      move_to(self_obj, bob_jail_hex, self_elevation);
      self_rotate(0);
      inven_unwield;
      move_obj_inven_to_obj(self_obj, BitsBob_Stand_Ptr);

      set_global_var(GVAR_BITS_BOB_IN_JAIL, 1);
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   if (BitsBob_Dialog_Ptr) then begin
      call talk_p_proc;
      BitsBob_Dialog_Ptr := 0;
   end
end

procedure pickup_p_proc begin
   if obj_in_party(source_obj) then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_HUBDWNTN);

   dude_look_at_self;
   get_reaction
   if (global_var(GVAR_BITS_BOB_REPORTED) != 0) then begin
      if global_var(GVAR_BITS_BOB_IN_JAIL) then begin
         if not(local_var(8)) then begin
            start_dialog_at_node(BobInJail01);
         end
         else begin
            float_msg(self_obj, mstr(260), FLOAT_MSG_LIGHT_RED);
         end
      end
      else begin
         start_dialog_at_node(Bob05);
      end
   end
   else if (local_var(5) == 0) then begin
      if (local_var(1) == 1) then
         start_dialog_at_node(Bob04);
      else
         start_dialog_at_node(Bob05);
   end
   else if (local_var(5) == 1) then begin
      if (local_var(6) <= (GAME_TIME_IN_DAYS)) then begin
         if (do_check(dude_obj, STAT_st, 0) or do_check(dude_obj, STAT_ch, 0)) then
            start_dialog_at_node(Bob00);
         else
            start_dialog_at_node(Bob01);
      end
      else begin
         start_dialog_at_node(Bob02);
      end
   end
   else
      call Bob03;
end

procedure destroy_p_proc begin
   set_global_var(GVAR_IS_BITS_BOB_ALIVE, 0);
   inc_good_critter
   BitsBob_Ptr := 0;
end

procedure damage_p_proc begin
   if source_is_dude then begin
      set_global_var(GVAR_ENEMY_HUB, 1);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure map_enter_p_proc begin
   BitsBob_Ptr := self_obj;
end

procedure BobStandardQuestions begin
   NOption(231, Bob11, 4);
   if looking_for_waterchip then
      NOption(232, Bob18, 4);
   if (global_var(GVAR_DECKER_KNOWN) == 1) then begin
      if (global_var(GVAR_DECKER_STATUS) != 0) then
         NOption(233, Bob23, 4);
      else
         NOption(233, Bob19, 4);
   end

   if ((global_var(GVAR_GRETCH_PRIMECUTS) == 1) and (global_var(GVAR_BITS_BOB_REPORTED) == 0)) then
      NOption(234, Bob20, 4);

   if (global_var(GVAR_MISSING_CARAVAN) == 1) then
      NOption(235, Bob21, 4);

   NOption(237, Bob25, 4);

   if (global_var(GVAR_BITS_BOB_REPORTED) != 0) then
      BOption(251, Bob55, 4);

   NOption(240, BobEnd, 4);
   NLowOption(238, Bob11);
   NLowOption(241, BobEnd);
end

procedure BobInJail01 begin
   Reply(252);
   BOption(253, BobInJail02, 4);
   BOption(254, BobInJail02, 4);
end

procedure BobInJail02 begin
   Reply(255);
   BOption(256, BobInJail03, 4);
   BOption(257, BobInJail03, 4);
   BOption(258, BobInJail03, 4);
end

procedure BobInJail03 begin
   BMessage(259);
   set_local_var(8, 1);
end

procedure BobBlackmailQuestions begin
   NOption(102, BBQa, 4);
   BOption(103, Bob06, 4);
   NOption(104, Bob07, 4);
   if (global_var(GVAR_DECKER_KNOWN) == 1) then begin
      if (global_var(GVAR_DECKER_STATUS) != 0) then
         NOption(233, Bob23, 4);
      else
         NOption(233, Bob08, 4);
   end
   NOption(106, Bob10, 4);
   NOption(240, BobEnd, 4);
end

procedure BBQa begin
   if (local_var(LVAR_Blackmail_Caps) < 1000) then begin
      if (dude_skill_success(SKILL_SPEECH, -15)) then begin
         call Bob09;
      end
      else begin
         call Bob13;
      end
   end
   else begin
      Reply(mstr(119) + " " + mstr(242));
      NOption(109, Bob14, 4);
      NOption(110, Bob52, 4);
      NOption(111, Bob51, 4);
      NOption(113, Bob53, 4);
      NOption(156, Bob54, 6);
      NOption(114, Bob06, 4);
   end
end

procedure Bob00 begin
   variable LVar0 := 0;
   dude_caps_adjust(local_var(LVAR_Blackmail_Caps));
   set_local_var(6, (GAME_TIME_IN_DAYS) + 5);
   Reply(101);
   call BobBlackmailQuestions;
end

procedure Bob01 begin
   Reply(108);
   NOption(109, Bob01a, 6);
   NOption(110, Bob01a, 4);
   NOption(111, Bob14, 4);
   NOption(112, Bob15, 4);
   NOption(113, Bob16, 4);
   NOption(114, BobCombat, 4);
end

procedure Bob01a begin
   if (local_var(LVAR_Blackmail_Caps) > 250) then begin
      call Bob13;
   end
   else begin
      if (dude_skill_success(SKILL_SPEECH, 0)) then begin
         call Bob12;
      end
      else begin
         call Bob13;
      end
   end
end

procedure Bob02 begin
   Reply(115);
   call BobBlackmailQuestions;
end

procedure Bob03 begin
   float_msg(self_obj, mstr(116), FLOAT_MSG_RED);
end

procedure Bob04 begin
   Reply(117);
   NOption(236, Bob22, 4);
   call BobStandardQuestions;
end

procedure Bob05 begin
   Reply(118);
   call BobStandardQuestions;
end

procedure Bob06 begin
   BMessage(119);
   call BobCombat;
end

procedure Bob07 begin
   set_local_var(5, 3);
   NMessage(120);
end

procedure Bob08 begin
   Reply(121);
   NOption(106, Bob10, 4);
   NOption(107, Bob11, 4);
end

procedure Bob09 begin
   Reply(122);
   NOption(mstr(123) + (local_var(LVAR_Blackmail_Caps) + 25) + mstr(124), Bob09a, 4);
   NOption(mstr(123) + (local_var(LVAR_Blackmail_Caps) + 50) + mstr(124), Bob09b, 4);
   NOption(mstr(123) + (local_var(LVAR_Blackmail_Caps) + 75) + mstr(124), Bob09c, 4);
   NOption(mstr(123) + (local_var(LVAR_Blackmail_Caps) + 100) + mstr(124), Bob09d, 4);
end

procedure Bob09a begin
   if (dude_skill_success(SKILL_SPEECH, 0) or dude_stat_success(STAT_ch, 0)) then begin
      set_local_var(LVAR_Blackmail_Caps, local_var(LVAR_Blackmail_Caps) + 25);
      call Bob46;
   end
   else begin
      call Bob47;
   end
end

procedure Bob09b begin
   if (dude_skill_success(SKILL_SPEECH, -15) or dude_stat_success(STAT_ch, -1)) then begin
      set_local_var(LVAR_Blackmail_Caps, local_var(LVAR_Blackmail_Caps) + 50);
      call Bob46;
   end
   else begin
      call Bob47;
   end
end

procedure Bob09c begin
   if (dude_skill_success(SKILL_SPEECH, -30) or dude_stat_success(STAT_ch, -3)) then begin
      set_local_var(LVAR_Blackmail_Caps, local_var(LVAR_Blackmail_Caps) + 75);
      call Bob46;
   end
   else begin
      call Bob47;
   end
end

procedure Bob09d begin
   if (dude_skill_success(SKILL_SPEECH, -60) or dude_stat_success(STAT_ch, -6)) then begin
      set_local_var(LVAR_Blackmail_Caps, local_var(LVAR_Blackmail_Caps) + 100);
      call Bob46;
   end
   else begin
      call Bob47;
   end
end

procedure Bob10 begin
   NMessage(125);
end

procedure Bob11 begin
   if not(global_var(GVAR_BITS_BOB_REPORTED)) then begin
      Reply(142);
      NOption(129, Bob27, 4);
      NOption(131, Bob28, 4);
   end
   else begin
      Reply(140);
      NOption(143, Bob27, 4);
      BOption(243, Bob11a, 4);
   end
   NOption(130, Bob30, 4);
   NLowOption(203, Bob27);
   if not(global_var(GVAR_BITS_BOB_REPORTED)) then
      NLowOption(204, Bob28);
   NLowOption(133, Bob30);
end

procedure Bob11a begin
   Reply(244);
   NOption(247, Bob27, 4);
   BOption(246, BobEnd, 4);
end

procedure Bob12 begin
   variable LVar0 := 0;
   dude_caps_adjust(local_var(LVAR_Blackmail_Caps));
   set_local_var(6, (GAME_TIME_IN_DAYS) + 5);
   BMessage(134);
end

procedure Bob13 begin
   set_local_var(5, 2);
   BMessage(135);
end

procedure Bob14 begin
   set_local_var(5, 2);
   BMessage(136);
end

procedure Bob15 begin
   set_local_var(5, 2);
   BMessage(137);
end

procedure Bob16 begin
   set_local_var(5, 2);
   BMessage(138);
end

procedure Bob18 begin
   Reply(148);
   NOption(149, Bob32, 4);
   call BobStandardQuestions;
end

procedure Bob19 begin
   set_global_var(GVAR_DECKER_KNOWN, 1);
   Reply(150);
   NOption(152, Bob33, 4);
   call BobStandardQuestions;
end

procedure Bob20 begin
   Reply(153);
   NOption(154, Bob20a, 4);
   NOption(155, Bob34, 4);
   NOption(156, Bob35, 4);
   NOption(157, Bob36, 4);
end

procedure Bob20a begin
   if (dude_skill_success(SKILL_SPEECH, 20)) then begin
      call Bob36;
   end
   else begin
      call Bob34;
   end
end

procedure Bob21 begin
   Reply(239);
   call BobStandardQuestions;
end

procedure Bob22 begin
   Reply(158);
   call BobStandardQuestions;
end

procedure Bob23 begin
   Reply(159);
   call BobStandardQuestions;
end

procedure Bob25 begin
   if ((global_var(GVAR_DECKER_STATUS) != 0) and (ToldRumor1 == 0)) then begin
      ToldRumor1 := 1;
      set_global_var(GVAR_DECKER_KNOWN, 1);
      NMessage(160);
   end
   else if ((global_var(GVAR_GREENE_DEAD) == 1) and (ToldRumor2 == 0)) then begin
      ToldRumor2 := 1;
      NMessage(161);
   end
   else if ((global_var(GVAR_KILL_MERCHANT) == 2) and (ToldRumor3 == 0)) then begin
      ToldRumor3 := 1;
      NMessage(162);
   end
   else if ((global_var(GVAR_STEAL_NECKLACE) == 2) and (ToldRumor4 == 0)) then begin
      ToldRumor4 := 1;
      NMessage(163);
   end
   else if ((global_var(GVAR_KILL_JAIN) == 2) and (ToldRumor5 == 0)) then begin
      ToldRumor5 := 1;
      NMessage(164);
   end
   else begin
      NMessage(165);
   end
   NMessage(166);
   call BobStandardQuestions;
end

procedure Bob27 begin
   variable LVar0 := 0;
   variable LVar1 := 0;

   if not(global_var(GVAR_BITS_BOB_REPORTED)) then begin
      if (dude_caps < 20) then begin
         NMessage(169);
      end
      else begin
         dude_caps_adjust(-20);
         LVar0 := create_object(PID_IGUANA_ON_A_STICK, 0, 0);
         add_obj_to_inven(dude_obj, LVar0);
         NMessage(170);
      end
   end
   else begin
      if (dude_caps < 30) then begin
         NMessage(169);
      end
      else begin
         dude_caps_adjust(-30);
         LVar0 := create_object(PID_IGUANA_ON_A_STICK, 0, 0);
         add_obj_to_inven(dude_obj, LVar0);
         NMessage(170);
      end
   end
   call BobStandardQuestions;
end

procedure Bob28 begin
   variable LVar0 := 0;
   variable LVar1 := 0;

   if (dude_caps < 8) then begin
      NMessage(173);
   end
   else begin
      dude_caps_adjust(-8);
      LVar0 := create_object(PID_MEAT_ON_A_STICK, 0, 0);
      add_obj_to_inven(dude_obj, LVar0);
      if ((local_var(5) > 0) and (global_var(GVAR_BITS_BOB_REPORTED) == 0)) then begin
         NMessage(171);
         NOption(172, Bob38, 4);
      end
      else begin
         NMessage(174);
      end
   end
   call BobStandardQuestions;
end

procedure Bob30 begin
   Reply(175);
   NOption(119, BobEnd, 4);
   NOption(246, BobEnd, 4);
end

procedure Bob31 begin
   Reply(176);
   NOption(177, Bob42, 4);
   NOption(178, Bob43, 4);
   NOption(179, Bob44, 4);
end

procedure Bob32 begin
   Reply(180);
   call BobStandardQuestions;
end

procedure Bob33 begin
   set_global_var(GVAR_DECKER_KNOWN, 1);
   Reply(182);
   call BobStandardQuestions;
end

procedure Bob34 begin
   set_local_var(5, 2);
   BMessage(183);
end

procedure Bob35 begin
   Reply(184);
   NOption(185, Bob42, 4);
   NOption(186, Bob43, 4);
   NOption(187, Bob44, 4);
end

procedure Bob36 begin
   Reply(188);
   NOption(189, Bob42, 4);
   NOption(190, Bob43, 4);
   NOption(191, Bob44, 4);
end

procedure Bob38 begin
   BMessage(194);
end

procedure Bob39 begin
   NMessage(195);
end

procedure Bob42 begin
   NMessage(207);
end

procedure Bob43 begin
   Reply(208);
   NOption(209, BobCombat, 4);
   NOption(210, Bob45, 4);
   NOption(211, Bob44, 4);
end

procedure Bob44 begin
   Reply(212);
   NOption(mstr(213) + mstr(214) + mstr(219), Bob44a, 4);
   NOption(mstr(213) + mstr(215) + mstr(219), Bob44b, 4);
   NOption(mstr(213) + mstr(216) + mstr(219), Bob44c, 4);
   NOption(mstr(213) + mstr(217) + mstr(219), Bob44d, 4);
   NOption(mstr(213) + mstr(218) + mstr(219), Bob44e, 4);
   NOption(220, Bob48, 4);
end

procedure Bob44a begin
   if (dude_skill_success(SKILL_SPEECH, 20) or dude_stat_success(STAT_ch, 2)) then begin
      set_local_var(LVAR_Blackmail_Caps, 50);
      call Bob46;
   end
   else begin
      call Bob13;
   end
end

procedure Bob44b begin
   if (dude_skill_success(SKILL_SPEECH, 0) or dude_stat_success(STAT_ch, 0)) then begin
      set_local_var(LVAR_Blackmail_Caps, 75);
      call Bob46;
   end
   else begin
      call Bob13;
   end
end

procedure Bob44c begin
   if (dude_skill_success(SKILL_SPEECH, -10) or dude_stat_success(STAT_ch, -1)) then begin
      set_local_var(LVAR_Blackmail_Caps, 100);
      call Bob46;
   end
   else begin
      call Bob13;
   end
end

procedure Bob44d begin
   if (dude_skill_success(SKILL_SPEECH, -30) or dude_stat_success(STAT_ch, -3)) then begin
      set_local_var(LVAR_Blackmail_Caps, 150);
      call Bob46;
   end
   else begin
      call Bob13;
   end
end

procedure Bob44e begin
   if (dude_skill_success(SKILL_SPEECH, -60) or dude_stat_success(STAT_ch, -6)) then begin
      set_local_var(LVAR_Blackmail_Caps, 200);
      call Bob46;
   end
   else begin
      call Bob13;
   end
end

procedure Bob45 begin
   BMessage(221);
end

procedure Bob46 begin
   if (local_var(9) != 2) then begin
      give_xp_msg(EXP_BLACKMAILING_BOB, mstr(250));
      inc_general_rep(-3);
      set_local_var(9, 2);
   end

   set_local_var(5, 1);
   set_local_var(6, (GAME_TIME_IN_DAYS) + 5);
   inc_general_rep(-2);

   NMessage(mstr(222) + local_var(LVAR_Blackmail_Caps) + mstr(223));
end

procedure Bob47 begin
   Reply(224);
   NOption(225, Bob49, 4);
   NOption(226, Bob50, 4);
   NOption(227, Bob13, 4);
end

procedure Bob48 begin
   BMessage(228);
end

procedure Bob49 begin
   BMessage(229);
end

procedure Bob50 begin
   NMessage(230);
end

procedure BobEnd begin
end

procedure BobCombat begin
   call combat;
end

procedure Bob51 begin
   BMessage(119);
end

procedure Bob52 begin
   BMessage(172);
end

procedure Bob53 begin
   NMessage(151);
end

procedure Bob54 begin
   Reply(184);
   NOption(185, Bob42, 4);
   NOption(186, Bob45, 4);
   NOption(190, Bob45, 4);
end

procedure Bob55 begin
   BMessage(245);
end
