/*

   Hub - Jain, guard

*/

/* Include Files */
#include "define.h"
//#include "area/hub.h"
#include "maps/hubwater.h"

#define NAME                    SCRIPT_HCHDGRD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;

procedure ChildGuard00;
procedure ChildGuard01;
procedure ChildGuard02;
procedure ChildGuard02a;
procedure ChildGuard03;
procedure ChildGuard04;
procedure ChildGuard05;
procedure ChildGuard06;
procedure ChildGuard07;
procedure ChildGuard08;
procedure ChildGuard09;
procedure ChildGuard10;
procedure ChildGuard11;
procedure ChildGuard12;
procedure ChildGuard13;
procedure ChildGuard14;
procedure ChildGuard15;
procedure ChildGuard16;
procedure ChildGuard17;
procedure ChildGuard18;
procedure ChildGuard19;
procedure ChildGuard20;
procedure ChildGuard21;
procedure ChildGuard22;
procedure ChildGuard23;
procedure ChildGuard24;
procedure ChildGuard25;
procedure ChildGuard26;
procedure ChildGuard27;
procedure ChildGuard28;
procedure ChildGuard29;
procedure ChildGuard30;
procedure ChildGuard31;
procedure ChildGuard32;
procedure ChildGuard33;
procedure ChildGuard34;
procedure ChildGuard35;
procedure ChildGuard36;
procedure ChildGuard37;

#define LVAR_Herebefore       (5)
#define LVAR_UsedDoor         (6)

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_HUB_CATHEDRAL);
      set_self_ai(AI_COC_HUB_BRAINWASHED);
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   if ((map_var(MVAR_CHILDREN_ANGRY) == 1) and (self_can_see_dude)) then begin
      call combat;
   end
   if (map_var(MVAR_DOOR_UNLOCK_FAILED) == 1) then begin
      dialogue_system_enter;
   end
end

procedure pickup_p_proc begin
   if source_is_dude then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_HUBWATER);

   dude_look_at_self;
   get_reaction
   if (map_var(MVAR_DOOR_UNLOCK_FAILED) == 1) then begin
      set_map_var(MVAR_DOOR_UNLOCK_FAILED, 0);
      if (local_var(LVAR_UsedDoor) == 0) then begin
         start_gdialog(NAME, self_obj, 4, -1, -1);
         gsay_start;
         call ChildGuard32;
         gsay_end;
         end_dialogue;
      end
      else begin
         call ChildGuard37;
      end
   end
   else if (global_var(GVAR_ENEMY_CATHEDRAL) == 1) then begin
      call ChildGuard00;
   end
   else if (map_var(MVAR_JAIN_DISMISSES) == 1) then begin
      call ChildGuard36;
   end
   else if has_rep_childkiller or (global_var(GVAR_BERSERKER_REPUTATION) == 1) then begin
      call ChildGuard01;
   end
   else begin
      if (local_var(LVAR_Herebefore) == 0) then begin
         start_gdialog(NAME, self_obj, 4, -1, -1);
         gsay_start;
         call ChildGuard02;
         gsay_end;
         end_dialogue;
      end
      else begin
         call ChildGuard30;
      end
   end
end

procedure destroy_p_proc begin
   set_map_var(MVAR_GUARD_DEAD, 1);
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure damage_p_proc begin
   if source_is_dude then begin
      set_map_var(6, 1);
   end
end

procedure ChildGuard00 begin
   set_global_var(GVAR_ENEMY_CATHEDRAL, 1);
   float_msg(self_obj, mstr(101), FLOAT_MSG_RED);
   call combat;
end

procedure ChildGuard01 begin
   float_msg(self_obj, mstr(102), FLOAT_MSG_RED);
end

procedure ChildGuard02 begin
   set_local_var(LVAR_Herebefore, 1);
   Reply(103);
   NOption(104, ChildGuard03, 7);
   NOption(105, ChildGuard04, 4);
   if looking_for_waterchip then begin
      GOption(106, ChildGuard05, 4);
   end
   if (global_var(GVAR_DECKER_KNOWN) == 1) then begin
      GOption(107, ChildGuard06, 4);
   end
   GOption(108, ChildGuard02a, 4);
   NLowOption(109, ChildGuard09);
end

procedure ChildGuard02a begin
   if (dude_skill_success(SKILL_SPEECH, 0) == 1) then begin
      call ChildGuard07;
   end
   else begin
      call ChildGuard08;
   end
end

procedure ChildGuard03 begin
   Reply(110);
   NOption(111, ChildGuard10, 7);
   NOption(112, ChildGuard11, 4);
   NOption(113, ChildGuard12, 4);
   NOption(114, ChildGuard13, 4);
   BOption(115, ChildGuard14, 4);
   NOption(116, ChildGuard15, 4);
end

procedure ChildGuard04 begin
   Reply(117);
   NOption(118, ChildGuard16, 7);
   NOption(119, ChildGuard17, 4);
   NOption(120, ChildGuard12, 4);
   NOption(121, ChildGuard18, 4);
end

procedure ChildGuard05 begin
   Reply(122);
   NOption(123, ChildGuard19, 4);
   BOption(124, ChildGuard20, 4);
   NOption(125, ChildGuard21, 4);
   NOption(126, ChildGuard22, 4);
end

procedure ChildGuard06 begin
   Reply(127);
   NOption(128, ChildGuard23, 4);
   NOption(129, ChildGuard24, 4);
   NOption(130, ChildGuard25, 4);
   NOption(131, ChildGuard21, 4);
end

procedure ChildGuard07 begin
   Reply(132);
   NOption(133, ChildGuard26, 7);
   NOption(134, ChildGuard27, 4);
   NOption(135, ChildGuard28, 4);
   if looking_for_waterchip then begin
      NOption(136, ChildGuard29, 4);
   end
   if (global_var(GVAR_DECKER_KNOWN) == 1) then begin
      NOption(137, ChildGuard06, 4);
   end
end

procedure ChildGuard08 begin
   NMessage(138);
end

procedure ChildGuard09 begin
   NMessage(139);
end

procedure ChildGuard10 begin
   NMessage(140);
end

procedure ChildGuard11 begin
   NMessage(141);
end

procedure ChildGuard12 begin
   NMessage(142);
end

procedure ChildGuard13 begin
   NMessage(143);
end

procedure ChildGuard14 begin
   set_global_var(GVAR_ENEMY_CATHEDRAL, 1);
   NMessage(144);
   call combat;
end

procedure ChildGuard15 begin
   NMessage(145);
end

procedure ChildGuard16 begin
   NMessage(146);
end

procedure ChildGuard17 begin
   NMessage(147);
end

procedure ChildGuard18 begin
   NMessage(148);
end

procedure ChildGuard19 begin
   NMessage(149);
end

procedure ChildGuard20 begin
   NMessage(150);
end

procedure ChildGuard21 begin
   NMessage(151);
end

procedure ChildGuard22 begin
   NMessage(152);
end

procedure ChildGuard23 begin
   NMessage(153);
end

procedure ChildGuard24 begin
   NMessage(154);
end

procedure ChildGuard25 begin
   NMessage(155);
end

procedure ChildGuard26 begin
   NMessage(156);
end

procedure ChildGuard27 begin
   NMessage(157);
end

procedure ChildGuard28 begin
   set_global_var(GVAR_DECKER_KNOWN, 1);
   NMessage(158);
end

procedure ChildGuard29 begin
   NMessage(159);
end

procedure ChildGuard30 begin
   float_msg(self_obj, mstr(160), FLOAT_MSG_RED);
end

procedure ChildGuard31 begin
   set_global_var(GVAR_ENEMY_CATHEDRAL, 1);
   NMessage(161);
   call combat;
end

procedure ChildGuard32 begin
   set_local_var(LVAR_UsedDoor, 1);
   Reply(162);
   NOption(163, ChildGuard33, 4);
   NOption(164, ChildGuard34, 4);
   NOption(165, ChildGuard35, 4);
   NOption(166, ChildGuard37, 4);
end

procedure ChildGuard33 begin
   NMessage(167);
end

procedure ChildGuard34 begin
   NMessage(168);
end

procedure ChildGuard35 begin
   NMessage(169);
end

procedure ChildGuard36 begin
   float_msg(self_obj, mstr(170), FLOAT_MSG_RED);
end

procedure ChildGuard37 begin
   set_global_var(GVAR_ENEMY_CATHEDRAL, 1);
   call combat;
end
