/*

   Hub - Lemmy, the drug seller

*/

/* Include Files */
#include "define.h"
//#include "area/necropolis.h"

#define NAME                    SCRIPT_LEMMY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;

procedure Lemmy01;
procedure Lemmy02;
procedure Lemmy03;
procedure Lemmy04;
procedure Lemmy05;
procedure Lemmy06;
procedure Lemmy08;
procedure Lemmy09;
procedure Lemmy10;
procedure Lemmy10a;
procedure Lemmy10b;
procedure Lemmy10c;
procedure Lemmy11;
procedure Lemmy12;
procedure Lemmy13;
procedure Lemmy14;
procedure Lemmy15;
procedure Lemmy16;
procedure Lemmy17;
procedure Lemmy18;
procedure Lemmy19;
procedure Lemmy20;
procedure Lemmy20a;
procedure Lemmy20b;
procedure Lemmy20c;
procedure Lemmy20d;
procedure Lemmy20e;
procedure Lemmy20f;
procedure Lemmy21;
procedure Lemmy22;
procedure Lemmy23;
procedure Lemmy24;
procedure Lemmy24a;
procedure Lemmy24b;
procedure Lemmy24c;
procedure Lemmy24d;
procedure Lemmy24e;
procedure Lemmy24f;
procedure Lemmy25;
procedure Lemmy26;
procedure Lemmy27;
procedure LemmyEnd;

procedure LemmyCombat;
procedure SendLemmyAtDay;
procedure combat;

variable tmp_hostile;
variable Only_Once := 1;
variable lastPsst;
variable Destination;
variable LastMove;
variable SetDayNight;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      if (local_var(7) == 0) then begin
         set_local_var(7, 1);
         self_caps_adjust(500);
      end
      set_self_team(TEAM_HUB_SKAG);
      set_self_ai(AI_HUB_PEASANTS);
      LastMove := 21325;
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   variable LVar0 := 0;
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   if (SetDayNight == 0) then begin
      add_timer_event(self_obj, game_ticks(random(5, 20)), 1);
      SetDayNight := 1;
   end
   if (local_var(6) == 0) then begin
      if ((((game_time / 10) - lastPsst) >= 10) and (tile_distance_objs(self_obj, dude_obj) <= 6)) then begin
         lastPsst := game_time / 10;
         float_msg(self_obj, mstr(101), FLOAT_MSG_RED);
      end
   end
   LVar0 := self_tile;
   if ((LVar0 == 21917) or (LVar0 == 20116) or (LVar0 == 25318)) then begin
      if (anim_busy(self_obj) == 0) then begin
         if (self_cur_rot != 3) then begin
            self_rotate(3);
         end
      end
   end
   else if (LVar0 == 26327) then begin
      if (anim_busy(self_obj) == 0) then begin
         if (self_cur_rot != 2) then begin
            self_rotate(2);
         end
      end
   end
end

procedure pickup_p_proc begin
   if source_is_dude then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_HUBDWNTN);

   dude_look_at_self;
   get_reaction
   set_local_var(6, 1);
   if (local_var(4) == 0) then begin
      set_local_var(4, 1);
      start_dialog_at_node(Lemmy01);
   end
   else if (local_var(5) == 1) then begin
      start_dialog_at_node(Lemmy26);
   end
   else begin
      start_dialog_at_node(Lemmy27);
   end
end

procedure destroy_p_proc begin
   inc_neutral_critter
end

procedure damage_p_proc begin
   if source_is_dude then begin
      set_global_var(GVAR_ENEMY_HUB, 1);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure timed_event_p_proc begin
   call SendLemmyAtDay;
end

procedure SendLemmyAtDay begin
   variable LVar0 := 0;
   Destination := 0;
   LVar0 := random(25, 45);
   while(Destination == 0) do begin
      Destination := random(1, 9);
      if (Destination == 1) then begin
         Destination := 25931;
      end
      else if (Destination == 2) then begin
         Destination := 25551;
      end
      else if (Destination == 3) then begin
         Destination := 21325;
      end
      else if (Destination == 4) then begin
         Destination := 21917;
      end
      else if (Destination == 5) then begin
         Destination := 18925;
      end
      else if (Destination == 6) then begin
         Destination := 23322;
      end
      else if (Destination == 7) then begin
         Destination := 26327;
      end
      else if (Destination == 8) then begin
         Destination := 20116;
      end
      else if (Destination == 9) then begin
         Destination := 25318;
      end
      if (Destination == LastMove) then begin
         Destination := 0;
      end
   end
   LastMove := Destination;
   reg_anim_clear(self_obj);
   reg_anim_begin();
   reg_anim_obj_move_to_tile(self_obj, Destination, -1);
   reg_anim_end();
   rm_timer_event(self_obj);
   add_timer_event(self_obj, game_ticks(LVar0), 1);
end

procedure Lemmy01 begin
   Reply(102);
   NOption(103, Lemmy03, 4);
   NOption(104, Lemmy04, 4);
   NOption(105, Lemmy05, 4);
   NLowOption(106, Lemmy02);
end

procedure Lemmy02 begin
   Reply(107);
   NLowOption(108, LemmyEnd);
end

procedure Lemmy03 begin
   set_local_var(5, 1);
   NMessage(109);
end

procedure Lemmy04 begin
   if (dude_is_male) then begin
      Reply(110);
   end
   else begin
      Reply(178);
   end
   NOption(111, Lemmy06, 4);
   BOption(112, LemmyCombat, 4);
   NOption(113, Lemmy03, 5);
end

procedure Lemmy05 begin
   Reply(114);
   if (global_var(GVAR_VANCE_KNOWS_PLAYER) != 1) then begin
      NOption(116, Lemmy23, 4);
   end
   NOption(117, Lemmy09, 4);
   NOption(118, Lemmy03, 4);
end

procedure Lemmy06 begin
   Reply(119);
   NOption(120, Lemmy05, 4);
   NOption(121, Lemmy09, 4);
   NOption(123, Lemmy08, 4);
end

procedure Lemmy08 begin
   NMessage(128);
end

procedure Lemmy09 begin
   Reply(129);
   call Lemmy18;
end

procedure Lemmy10 begin
   Reply(130);
   NOption(131, Lemmy10a, 4);
   NOption(132, Lemmy10b, 4);
   NOption(133, Lemmy10c, 4);
   NOption(134, Lemmy08, 4);
end

procedure Lemmy10a begin
   variable LVar0 := 0;
   if (dude_caps >= 500) then begin
      dude_caps_adjust(-500);
      call Lemmy13;
   end
   else begin
      call Lemmy11;
   end
end

procedure Lemmy10b begin
   variable LVar0 := 0;
   if (dude_stat_success(STAT_ch, -3) or dude_skill_success(SKILL_BARTER, -30)) then begin
      if (dude_caps >= 400) then begin
         dude_caps_adjust(-400);
         call Lemmy14;
      end
      else begin
         call Lemmy11;
      end
   end
   else begin
      call Lemmy11;
   end
end

procedure Lemmy10c begin
   if (dude_stat_success(STAT_st, -3)) then begin
      call Lemmy15;
   end
   else begin
      call Lemmy12;
   end
end

procedure Lemmy11 begin
   NMessage(135);
end

procedure Lemmy12 begin
   set_local_var(5, 1);
   BMessage(136);
end

procedure Lemmy13 begin
   NMessage(137);
   call Lemmy16;
end

procedure Lemmy14 begin
   NMessage(138);
   call Lemmy16;
end

procedure Lemmy15 begin
   NMessage(139);
   call Lemmy16;
end

procedure Lemmy16 begin
   Reply(140);
   NOption(141, Lemmy17, 4);
   NOption(142, Lemmy08, 4);
end

procedure Lemmy17 begin
   NMessage(143);
   call Lemmy18;
end

procedure Lemmy18 begin
   if looking_for_waterchip then begin
      NOption(144, Lemmy10, 4);
   end
   if (global_var(GVAR_DECKER_KNOWN) == 1) then begin
      NOption(145, Lemmy19, 4);
   end
   if (map_var(41) == 1) then begin
      NOption(146, Lemmy20, 4);
   end
   if (global_var(GVAR_VANCE_KNOWS_PLAYER) != 1) then begin
      NOption(147, Lemmy23, 4);
   end
   NOption(148, Lemmy08, 4);
   NLowOption(106, Lemmy02);
end

procedure Lemmy19 begin
   Reply(149);
   NOption(150, Lemmy17, 4);
   NOption(151, Lemmy08, 4);
end

procedure Lemmy20 begin
   Reply(152);
   NOption(153, Lemmy20a, 4);
   NOption(154, Lemmy20b, 4);
   NOption(155, Lemmy20c, 4);
   NOption(156, Lemmy08, 4);
end

procedure Lemmy20a begin
   variable LVar0 := 0;
   if (dude_caps >= 300) then begin
      dude_caps_adjust(-300);
      call Lemmy20d;
   end
   else begin
      call Lemmy11;
   end
end

procedure Lemmy20b begin
   variable LVar0 := 0;
   if (dude_stat_success(STAT_ch, -3) or dude_skill_success(SKILL_BARTER, -30)) then begin
      if (dude_caps >= 240) then begin
         dude_caps_adjust(-240);
         call Lemmy20e;
      end
      else begin
         call Lemmy11;
      end
   end
   else begin
      call Lemmy11;
   end
end

procedure Lemmy20c begin
   if (dude_stat_success(STAT_st, -3)) then begin
      call Lemmy20f;
   end
   else begin
      call Lemmy12;
   end
end

procedure Lemmy20d begin
   NMessage(137);
   call Lemmy21;
end

procedure Lemmy20e begin
   NMessage(138);
   call Lemmy21;
end

procedure Lemmy20f begin
   NMessage(139);
   call Lemmy21;
end

procedure Lemmy21 begin
   Reply(157);
   NOption(158, Lemmy22, 4);
   NOption(159, Lemmy17, 4);
   NOption(160, Lemmy08, 4);
end

procedure Lemmy22 begin
   Reply(161);
   NOption(162, Lemmy17, 4);
   BOption(163, LemmyCombat, 4);
   NOption(164, Lemmy08, 4);
end

procedure Lemmy23 begin
   Reply(165);
   NOption(166, Lemmy24, 4);
   NOption(167, Lemmy08, 4);
end

procedure Lemmy24 begin
   Reply(168);
   NOption(169, Lemmy24a, 4);
   NOption(170, Lemmy24b, 4);
   NOption(171, Lemmy24c, 4);
   NOption(172, Lemmy08, 4);
end

procedure Lemmy24a begin
   variable LVar0 := 0;
   if (dude_caps >= 1000) then begin
      dude_caps_adjust(-1000);
      call Lemmy24d;
   end
   else begin
      call Lemmy11;
   end
end

procedure Lemmy24b begin
   variable LVar0 := 0;
   if (dude_stat_success(STAT_ch, -3) or dude_skill_success(SKILL_BARTER, -30)) then begin
      if (dude_caps >= 800) then begin
         dude_caps_adjust(-800);
         call Lemmy24e;
      end
      else begin
         call Lemmy11;
      end
   end
   else begin
      call Lemmy11;
   end
end

procedure Lemmy24c begin
   if (dude_stat_success(STAT_st, -3)) then begin
      call Lemmy24f;
   end
   else begin
      call Lemmy12;
   end
end

procedure Lemmy24d begin
   NMessage(137);
   call Lemmy25;
end

procedure Lemmy24e begin
   NMessage(138);
   call Lemmy25;
end

procedure Lemmy24f begin
   NMessage(139);
   call Lemmy25;
end

procedure Lemmy25 begin
   set_global_var(GVAR_VANCE_KNOWS_PLAYER, 1);
   Reply(173);
   NOption(174, Lemmy17, 4);
   NOption(175, Lemmy08, 4);
end

procedure Lemmy26 begin
   NMessage(176);
end

procedure Lemmy27 begin
   Reply(177);
   call Lemmy18;
end

procedure LemmyEnd begin
end

procedure LemmyCombat begin
   set_local_var(5, 1);
   call combat;
end
