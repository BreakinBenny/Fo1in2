/*

   Vault 13 - the doctor

*/

#include "define.h"
#include "area/vault13.h"

#define NAME                    SCRIPT_MEDIC
#define TOWN_REP_VAR            (GVAR_TOWN_REP_V13)

#include "command.h"
#include "modreact.h"

procedure start;
procedure map_enter_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure MedicBadPlayer; // Medic00
procedure MedicIDontCare; // Medic01
procedure MedicLowIntelligenceBadPlayer;  // Medic02
procedure MedicSeriouslyWounded;          // Medic03
procedure MedicMainMenu;                  // Medic04
procedure MedicCheckPlayerInjuries;       // Medic04a
procedure MedicStupidGiveStimpaks;        // Medic05
procedure MedicGoingOk;                   // Medic06
procedure MedicPoisonedHealRequest;       // Medic07
procedure MedicRequestDrugs;              // Medic08
procedure MedicRequestDrugsUrgent;        // Medic08a
procedure MedicRequestDrugsUrgentFailed;  // Medic09
procedure MedicRequestDrugsUrgentSuccess; // Medic10
procedure MedicRequestMoreStimpaks; // Medic11
procedure MedicRequestHealing; // Medic12
procedure MedicYouSeemOk;      // Medic13
procedure MedicYouLookHurt;    // Medic14
procedure MedicInfoAboutHealing; // Medic15
procedure MedicStartHealing;   // Medic16
procedure MedicHealPlayer;     // Medic17
procedure MedicRediationCheck; // Medic18
procedure MedicDeclineRadiationTreatment; // Medic19
procedure MedicRadiationCheckHowLong; // Medic20
procedure MedicRadiationCheckHowLongRads; // Medic21
procedure MedicStartRediationTreatment; // Medic22
procedure MedicRemoveRadiation;         // Medic23
procedure MedicComputeRadsToTime;     // Medic24
procedure MedicRadiationFadeOutIn;    // Medic25
procedure MedicRadiationHealRequest;  // Medic26
procedure MedicDeniedMedicalSupplies; // Medic27
procedure MedicStupidGiveDrugs;       // Medic28
procedure MedicGiveOneStimpak;        // Medic29

procedure GiveStimpaks;
procedure GiveDrugs;
procedure MedicEnd;

procedure MedicMutatedToeRemovalRequest; // Node2000
procedure MedicRemoveMutatedToe;         // Node3000

variable intensity   := 0; // Shouldn't be a global but a local variable? Only used in MedicRediationCheck
variable removal     := 0; // The amount of radiation to remove
variable Minutes     := 0; // Amount of minutes radiation treatment takes. Computed by MedicComputeRadsToTime
variable Hours       := 0; // Amount of hours radiation treatment takes. Computed by MedicComputeRadsToTime
variable TempMinutes := 0;
variable rads        := 0; // Not sure if we really need to save this in a variable?
variable PoisAmt     := 0; // Not sure if we really need to save this in a variable?
variable rounded     := 0; // Used in MedicComputeRadsToTime
variable IfRounded   := 0; // Shouldn't be a global but a local variable? Only used in MedicRadiationCheckHowLongRads
variable home_tile   := 13084;// was 13881

variable Only_Once := 0;


#define LVAR_RefuseToHelp        (4)  // The doctor refuses to help the player
#define LVAR_HostileBehavior     (5)  // Has attacked or stolen
#define LVAR_HasTalkedBefore     (6)  // Set after talked for the first time
#define LVAR_ReceivedSupplies    (7)  // 0 = No, 1 = Once, 2 = Twice or more, 3 = Failed request with speech check
#define LVAR_DayReceivedSupplies (8)  // GAME_TIME_IN_DAYS when the player received drugs or stimpaks last time
#define LVAR_Rotated            (10)
#define LVAR_Had_Toe_Removed    (11)  // Mutated toe war removed from the player

#define HasTalkedBefore (local_var(LVAR_HasTalkedBefore))
#define RefusesToHelp   (local_var(LVAR_RefuseToHelp)) // The doctor refuses to help the player

#define player_damage (dude_max_hp - dude_cur_hp)
#define is_poisoned   (PoisAmt > 0)
#define is_irradiated (rads > 0)

procedure start begin
   if (Only_Once == 0) then begin
      Only_Once := 1;
      set_self_team(TEAM_VAULT13);
   end
end

procedure map_enter_p_proc begin
   if (v13_invaded) then begin
      invasion_kill_critter_V13;
   end
end

procedure critter_p_proc begin
   if self_tile != home_tile then begin
      self_walk_to_tile(home_tile);
   end
   else begin
      // Set correct rotation, but only once
      if local_var(LVAR_Rotated) == 0 then begin
         if self_tile == home_tile then begin
            self_rotate(2);
            set_local_var(LVAR_Rotated, 1);
         end
      end
   end
end

procedure damage_p_proc begin
   if source_is_dude then begin
      set_local_var(LVAR_RefuseToHelp, 1);
      set_local_var(LVAR_HostileBehavior, 1);
   end
end

procedure destroy_p_proc begin
   set_global_var(GVAR_VAULT_13_HOSTILE, 1);
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(136));
end

procedure pickup_p_proc begin
   float_msg(self_obj, mstr(160), FLOAT_MSG_RED);
   set_local_var(LVAR_HostileBehavior, 1);
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_VAULT13);

   debug("Current damage: " + player_damage);
   debug("Current poison: " + dude_poison_stat + ". " + "Current rads: " + dude_rads + ". " + "Current time: " + game_time_hour + ". ");

   dude_look_at_self;
   if not(RefusesToHelp) then begin
      get_reaction
      start_gdialog(184, self_obj, 4, -1, -1);
      gsay_start;
      if (local_var(LVAR_HostileBehavior) == 1) or REP_ENEMY_VAULT13 then begin
         call MedicBadPlayer;// bad player
      end
      else begin
         // Why is this saved into these variables instead of used directly?
         PoisAmt := dude_poison_stat;
         rads := dude_rads;
         if (player_damage > 7) then begin
            call MedicSeriouslyWounded; // Go right to healing
         end
         else begin
            call MedicMainMenu;
         end
      end
      gsay_end;
      end_dialogue;
   end
   else begin // RefusesToHelp, LVAR_RefuseToHelp == 1
      display_msg(mstr(159)); // The medic refuses to speak to you
   end
   if not(local_var(LVAR_HasTalkedBefore)) then begin
      set_local_var(LVAR_HasTalkedBefore, 1);
   end
   if debug_mode then begin
      display_msg("Current poison: " + dude_poison_stat + ". " + "Current rads: " + dude_rads + ". " + "Current time: " + game_time_hour + ". ");
   end
end

procedure MedicBadPlayer begin
   Reply(100); // I can't believe what you've done
   BOption(101, MedicIDontCare, 4); // I don't care. I'm hurt, heal me
   BLowOption(102, MedicLowIntelligenceBadPlayer);
end

procedure MedicIDontCare begin
   set_local_var(LVAR_RefuseToHelp, 1);
   BigDownReact
   BMessage(103); // I will not help you
end

procedure MedicLowIntelligenceBadPlayer begin
   set_local_var(LVAR_RefuseToHelp, 1);
   BigDownReact
   BMessage(104); // Go away
end

procedure MedicSeriouslyWounded begin
   Reply(105); // Oh my, you're seriously wounded
   NOption(164, MedicStartHealing, 1);
end

procedure MedicMainMenu begin
   if waterchip_returned then begin
      Reply(157);// thanks for saving us
   end
   else begin
      if not(HasTalkedBefore) then begin // The first time we talk to the doctor
         Reply(113);// What can i do for you?
         NOption(114, MedicRequestHealing, 4); // I need healin
      end
      else begin// hello again!
         Reply(mstr(106) + dude_name + mstr(107));
         NOption(108, MedicGoingOk, 4); // It's going ok
         NOption(109, MedicRequestHealing, 4); // I need help
      end

      if(global_var(GVAR_HAVE_MUTATED) == 1) then
         NOption(2000, MedicMutatedToeRemovalRequest, 4);
   end
   if is_poisoned then begin// i've been poisoned
      NOption(161, MedicPoisonedHealRequest, 5);
   end
   if is_irradiated then begin// i'm irradiated
      NOption(162, MedicRadiationHealRequest, 5);
   end
   if waterchip_returned then begin// you're welcome. bye.
      NOption(163, MedicEnd, 4);
   end
   if dude_is_stupid then begin
      NLowOption(117, MedicRequestHealing); // Need healing
      if not(HasTalkedBefore) then begin
         BLowOption(118, MedicInfoAboutHealing);// info on healing STUPID
      end
      else begin
         BLowOption(171, MedicInfoAboutHealing);// info on healing
      end
   end
   if (local_var(LVAR_ReceivedSupplies) == 0) then begin
      set_local_var(LVAR_DayReceivedSupplies, GAME_TIME_IN_DAYS);
      NLowOption(110, MedicStupidGiveStimpaks);
      NOption(115, MedicRequestDrugs, 5);
   end
   else if (local_var(LVAR_ReceivedSupplies) == 1) then begin
      set_local_var(LVAR_DayReceivedSupplies, GAME_TIME_IN_DAYS);
      NLowOption(110, MedicStupidGiveDrugs);
      NOption(116, MedicRequestMoreStimpaks, 5);
   end
   else if (local_var(LVAR_ReceivedSupplies) == 2) then begin
      // Check if 30 days or more have elapsed since we last asked for stimpaks or drugs.
      if ((GAME_TIME_IN_DAYS) - local_var(LVAR_DayReceivedSupplies)) >= 30 then begin
         // Give one stimpak and set the day when the player received it.
         set_local_var(LVAR_DayReceivedSupplies, GAME_TIME_IN_DAYS);
         NLowOption(110, MedicGiveOneStimpak);
         NOption(116, MedicGiveOneStimpak, 5);
      end
      else begin // Requesting supplies too soon.
         BLowOption(110, MedicDeniedMedicalSupplies);
         NOption(116, MedicDeniedMedicalSupplies, 5);
      end
   end
end

procedure MedicCheckPlayerInjuries begin
   if (player_damage > 3) or is_poisoned then begin
      call MedicYouLookHurt;
   end
   else begin
      call MedicYouSeemOk;
   end
end

procedure MedicStupidGiveStimpaks // Medic05. Stupid character, first time receiving stimpaks.
begin
    // This if check is redundant? Was already checked in caller.
   if local_var(LVAR_ReceivedSupplies) == 0 then begin
      set_local_var(LVAR_ReceivedSupplies, 1);
   end
   NMessage(111);
   call GiveStimpaks;
end

procedure MedicGoingOk // Medic06
begin
   NMessage(112); // Good, keep up the good work. And let me know if you need anything.
end

procedure MedicPoisonedHealRequest// poisoned heal request
begin
   poison(dude_obj, -PoisAmt);
   gfade_out(1);
   game_time_advance_minutes(PoisAmt * 3); // 3 minutes per poison
   gfade_in(1);
   NMessage(156);
   if (player_damage) <= 3 then begin
      critter_heal(dude_obj, dude_max_hp);
   end
end

procedure MedicRequestDrugs // Medic08
begin
   Reply(119); // I'm not authorized to give you any. Sorry.
   BOption(120, MedicEnd, 4); // Thanks for nothing
   NOption(121, MedicRequestDrugsUrgent, 6);
end

procedure MedicRequestDrugsUrgent // Medic08a
begin
   if local_var(LVAR_ReceivedSupplies) == 0 then begin
      set_local_var(LVAR_ReceivedSupplies, 1);
   end
   if dude_skill_success(SKILL_SPEECH, -10) then begin
      call MedicRequestDrugsUrgentSuccess;
   end
   else begin
      call MedicRequestDrugsUrgentFailed;
   end
end

procedure MedicRequestDrugsUrgentFailed // Medic09
begin
   set_local_var(LVAR_ReceivedSupplies, 3);
   BMessage(122); // Sorry, I can't give them to you.
end

procedure MedicRequestDrugsUrgentSuccess // Medic10
begin
   Reply(123); // Well, since you put it that way. But don't tell anyone that I let you have these. They are extremely addictive and dangerous to use.
   NOption(124, GiveDrugs, 4);
end

procedure GiveStimpaks begin
   variable Stimpak := 0;
   Stimpak := create_object(PID_STIMPAK, 0, 0);
   add_mult_objs_to_inven(dude_obj, Stimpak, 4 - difficulty_level);
end

procedure MedicRequestMoreStimpaks begin
    // This if check is redundant? Was already checked in caller.
   if local_var(LVAR_ReceivedSupplies) == 1 then begin
      set_local_var(LVAR_ReceivedSupplies, 2);
   end
   if dude_stat_success(STAT_ch, 0) or dude_skill_success(SKILL_SPEECH, -20) then begin
      call MedicGiveOneStimpak;
   end
   else begin
      NMessage(125); // Stimpaks are being rationed.
   end
end

procedure MedicRequestHealing // "hmm let's see..."
begin
   Reply(126);
   NOption(164, MedicCheckPlayerInjuries, 1);
end

procedure MedicYouSeemOk// don't need healing if small dmg
begin
   NMessage(127);
end

procedure MedicYouLookHurt // Medic14
begin
   Reply(128); // You look hurt. Here, let me help you
   NOption(164, MedicStartHealing, 1);
end

procedure MedicInfoAboutHealing // Medic15
begin
   NMessage(129); // If you need healing, come back here to me or use some of the stimpaks we have.
end

procedure MedicStartHealing// "lie down and we'll start"
begin
   Reply(130);
   NOption(164, MedicHealPlayer, 1);
end

procedure MedicHealPlayer // Medic17
begin
   // Added, in the vanilla script, poison isn't removed.
   if is_poisoned then begin
      poison(dude_obj, -PoisAmt);
   end
   gfade_out(1);
   if is_poisoned then begin
      game_time_advance_minutes(PoisAmt * 3);
   end
   critter_heal(dude_obj, player_damage);
   // Added, in the vanilla script, broken limbs aren't healed
   critter_uninjure(dude_obj, (DAM_CRIP_LEG_LEFT bwor DAM_CRIP_LEG_RIGHT bwor DAM_CRIP_ARM_LEFT bwor DAM_CRIP_ARM_RIGHT));
   game_time_advance_minutes(player_damage * 5);
   gfade_in(1);
   NMessage(131);
   if (player_damage) <= 3 then begin
      critter_heal(dude_obj, dude_max_hp);
   end
   if rads then begin
      call MedicRediationCheck;
   end
end

procedure MedicRediationCheck begin // Medic18
   game_time_advance_minutes(1);
   if (rads > 400) then begin
      intensity := mstr(132);
   end
   else if (rads > 200) then begin
      intensity := mstr(133);
   end
   else if (rads > 100) then begin
      intensity := mstr(134);
   end
   else begin
      intensity := mstr(135);
   end
   Reply(intensity);
   NOption(138, MedicDeclineRadiationTreatment, 4);
   NOption(139, MedicStartRediationTreatment, 4);
   NOption(140, MedicRadiationCheckHowLong, 4);
   NOption(141, MedicRadiationCheckHowLongRads, 6);
   NLowOption(142, MedicDeclineRadiationTreatment);
   NLowOption(143, MedicStartRediationTreatment);
end

procedure MedicDeclineRadiationTreatment // Medic19
begin
   NMessage(144);
end

// Compute how long it takes and present it to the player
procedure MedicRadiationCheckHowLong begin // Medic20
   call MedicComputeRadsToTime;
   if not(Hours) then begin
      Reply(mstr(165) + mstr(166) + mstr(170));
   end
   else begin
      if Hours == 1 then begin
         if TempMinutes >= 30 then begin
            Reply(mstr(145) + Hours + mstr(169) + mstr(146));
         end
         else begin
            Reply(mstr(145) + mstr(166) + mstr(170));
         end
      end
      else begin
         if TempMinutes >= 30 then begin
            Reply(mstr(145) + Hours + mstr(169) + mstr(146));
         end
         else begin
            Reply(mstr(145) + Hours + mstr(146));
         end
      end
   end
   NOption(147, MedicDeclineRadiationTreatment, 4);
   NOption(148, MedicStartRediationTreatment, 4);
end

// Compute how long it takes and how many rads can be removed and present it to the player
procedure MedicRadiationCheckHowLongRads begin // Medic21
   call MedicComputeRadsToTime;

   if Hours > 1 then begin
      if (removal > rads) or (removal == rads) then begin
         IfRounded := mstr(168);
      end
      else begin
         IfRounded := mstr(150);
      end
   end
   else begin
      if (removal > rads) or (removal == rads) then begin
         IfRounded := mstr(167);
      end
      else begin
         IfRounded := mstr(150);
      end
   end

   if not(Hours) then begin
      Reply(mstr(165) + mstr(166) + IfRounded + rounded + mstr(151));
   end
   else begin
      if Hours == 1 then begin
         if TempMinutes >= 30 then begin
            Reply(mstr(149) + Hours + mstr(169) + IfRounded + rounded + mstr(151));
         end
         else begin
            Reply(mstr(149) + mstr(166) + IfRounded + rounded + mstr(151));
         end
      end
      else begin
         if TempMinutes >= 30 then begin
            Reply(mstr(149) + Hours + mstr(169) + IfRounded + rounded + mstr(151));
         end
         else begin
            Reply(mstr(149) + Hours + IfRounded + rounded + mstr(151));
         end
      end
   end

   NOption(152, MedicDeclineRadiationTreatment, 4);
   NOption(153, MedicStartRediationTreatment, 4);
end

procedure MedicStartRediationTreatment // Medic22
begin
   Reply(random(154, 155));
   NOption(164, MedicRemoveRadiation, 1);
end

procedure MedicRemoveRadiation // Medic23
begin
   // time fade & increase for removal
   gfade_out(1);
   radiation_inc(dude_obj, -removal);
   game_time_advance_minutes(Minutes);
   gfade_in(1);
   NMessage(156);
end

// This function computes the amount of time the radiation will take to heal.
procedure MedicComputeRadsToTime // Medic24
begin
   removal := random(140, 160) + (dude_luck * 2);
   if (removal > rads) or (removal == rads) then begin
      Minutes := (rads * 2) + 30;// time per rad to heal. was 20.(!)
      rounded := rads;
   end
   else begin
      Minutes := (removal * 2) + 30;// time per rad to heal. was 20.(!)
      rounded := removal;
      while(rounded % 5) do begin// round the number.
         rounded := rounded - 1;
      end
   end
   TempMinutes := Minutes;
   Hours := 0;
   while(TempMinutes >= 60) do begin
      TempMinutes := (TempMinutes - 60);
      Hours := (Hours + 1);
   end
end

procedure MedicRadiationFadeOutIn begin
   gfade_out(1);
   gfade_in(1);
   call MedicRediationCheck;
end

procedure MedicRadiationHealRequest// irradiated heal request
begin
   Reply(137);
   NOption(164, MedicRadiationFadeOutIn, 1);
end

procedure MedicDeniedMedicalSupplies // Medic27
begin
   BMessage(125); // Stimpaks are being rationed.
end

procedure MedicStupidGiveDrugs // Medic28
begin
   // This if check is redundant? Was already checked in caller.
   if local_var(LVAR_ReceivedSupplies) == 1 then begin
      set_local_var(LVAR_ReceivedSupplies, 2);
   end
   NMessage(172);
   call GiveDrugs;
end

#define give_drug(_pid, _amount) drugPtr := create_object(_pid, 0, 0); \
                                 add_mult_objs_to_inven(dude_obj, drugPtr, _amount)

procedure MedicGiveOneStimpak begin
   variable drugPtr := 0;
   give_drug(PID_STIMPAK, 1);
   NMessage(111);
end

procedure GiveDrugs begin
   variable drugPtr := 0;
   variable amount  := 0;
   amount := 2 - difficulty_level;
   if amount then begin
      give_drug(PID_STIMPAK, amount);
      give_drug(PID_BUFFOUT, amount);
   end
   give_drug(PID_SUPER_STIMPAK, 1);
   give_drug(PID_PSYCHO, 1);
end

procedure MedicEnd begin
end

procedure MedicMutatedToeRemovalRequest begin
   if (local_var(LVAR_Had_Toe_Removed) == 0) then begin
      NMessage(2001);
      Reply(2002);
   end
   else begin
      Reply(2003);
   end

   NOption(2010, MedicRemoveMutatedToe, 4);
   NOption(2020, MedicMainMenu, 4);
   NOption(2030, MedicEnd, 4);
end

procedure MedicRemoveMutatedToe begin
   variable toePtr;

   NMessage(3000);

   gfade_out(600);

   // Remove mutation
   if (dude_rads > 50) then begin
      set_global_var(GVAR_HAVE_MUTATED, 0);
      set_global_var(GVAR_MUTATE_STAGE, 1);
      set_global_var(GVAR_MUTATE_WHEN, GAME_TIME_IN_DAYS);
   end
   else begin
      set_global_var(GVAR_HAVE_MUTATED, 0);
      set_global_var(GVAR_MUTATE_STAGE, 0);
   end

   // Give player a mutated "toe"
   toePtr := create_object(PID_MUTATED_TOE, 0, 0);
   add_obj_to_inven(dude_obj, toePtr);
   gfade_in(600);

   Reply(3001);

   if (local_var(LVAR_Had_Toe_Removed) == 0) then begin
      set_local_var(LVAR_Had_Toe_Removed, 1);
      NOption(3010, MedicMainMenu, 4);
   end
   else
      NOption(3020, MedicEnd, 4);
   NOption(3030, MedicEnd, 4);
end
