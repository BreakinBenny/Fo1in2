#include "define.h"

#define NAME                    SCRIPT_BV2VAULT

#include "command.h"

procedure start;
procedure ladder01;
procedure give_damage;

variable TestAGILITY;
variable damage;
variable Current_HP;


procedure start begin
end

procedure use_p_proc begin
   if ((anim_busy(dude_obj) != 0) or (anim_busy(dude_obj) == 0)) then begin
      TestAGILITY := do_check(dude_obj, STAT_ag, 2);
      call ladder01;
      load_map("VAULTBUR.map", 0);
      script_overrides;
   end
end

procedure ladder01 begin
   script_overrides;
   if (is_success(TestAGILITY)) then begin
   end
   else begin
      if (is_critical(TestAGILITY)) then begin
         damage := (random(3, 18) - 10);
         call give_damage;
      end
      else begin
         if random(0, 1) then begin
            damage := random(2, 4);
         end
         else begin
            damage := 0;
         end
         call give_damage;
      end
   end
end

procedure give_damage begin
   Current_HP := dude_cur_hp;
   if (damage >= Current_HP) then begin
      damage := (Current_HP - 1);
   end
   if (damage < 1) then begin
      damage := 0;
      display_msg(mstr(101));
   end
   else begin
      display_msg(mstr(102) + damage + mstr(103));
      critter_heal(dude_obj, -damage);
   end
end
