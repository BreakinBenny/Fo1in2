/*

   Encounter - Fisherman

*/

/* Include Files */
#include "define.h"

#define NAME                    SCRIPT_FISHRMAN

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure FishrMan00;
procedure FishrMan01;
procedure FishrMan02;
procedure FishrMan03;
procedure FishrMan03a;
procedure FishrMan04;
procedure FishrMan04a;
procedure FishrMan04b;
procedure FishrMan05;
procedure FishrMan05a;
procedure FishrMan06;
procedure FishrMan07;
procedure FishrMan07a;
procedure FishrMan08;
procedure FishrMan08a;
procedure FishrMan09;
procedure FishrMan09a;
procedure FishrMan10;
procedure FishrMan11;
procedure FishrMan12;
procedure FishrMan12a;
procedure FishrMan13;
procedure FishrMan14;
procedure FishrMan15;
procedure FishrMan15a;
procedure FishrMan16;
procedure FishrMan17;
procedure FishrMan18;
procedure FishrMan19;
procedure FishrMan20;
procedure FishrMan21;
procedure FishrMan22;
procedure FishrMan23;
procedure FishrMan24;
procedure FishrMan25;
procedure FishrManBarter;
procedure FishrManCombat;
procedure FishrManEnd;
procedure FishrManEnd1;
procedure FishrManEnd2;

export variable dude_enemy;

variable tmp_hostile;
variable initial := 0;
variable known;

procedure start begin
   if not(initial) then begin
      set_self_team(TEAM_SHADY_SANDS);
      set_self_ai(AI_PEASANT);
      tmp_hostile := global_var(GVAR_ENEMY_RANDOM_ENC);
      initial := 1;
   end
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   if (dude_enemy) then begin
      if (self_can_see_dude) then begin
         tmp_hostile := 1;
         set_global_var(GVAR_ENEMY_RANDOM_ENC, 1);
      end
   end
end

procedure damage_p_proc begin
   if source_is_dude then begin
      dude_enemy := 1;
      set_global_var(GVAR_ENEMY_RANDOM_ENC, 1);
   end
end

procedure destroy_p_proc begin
   set_global_var(GVAR_IS_FISHERMAN_DEAD, 1);
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure pickup_p_proc begin
   dude_enemy := 1;
   tmp_hostile := 1;
   set_global_var(GVAR_ENEMY_RANDOM_ENC, 1);
end

procedure talk_p_proc begin
   variable LVar0 := 0;
   dude_look_at_self;
   get_reaction
   if (dude_enemy) then begin
      LVar0 := random(100, 102);
      float_msg(self_obj, message_str(SCRIPT_ENEMY, LVar0), FLOAT_MSG_NORMAL);
   end
   else begin
      if (bad_critter_reaction or has_rep_childkiller or (check_general_rep < -30)) then begin
         call FishrMan00;
      end
      else if (dude_is_armed) then begin
         call FishrMan25;
      end
      else if (known) then begin
         start_dialog_at_node(FishrMan03);
      end
      else if (check_general_rep >= 30) then begin
         start_dialog_at_node(FishrMan02);
      end
      else begin
         start_dialog_at_node(FishrMan01);
      end
   end
end

procedure FishrMan00 begin
   float_msg(self_obj, mstr(101 + (dude_is_female)), FLOAT_MSG_NORMAL);
end

procedure FishrMan01 begin
   known := 1;
   if (dude_is_male) then begin
      Reply(103);
   end
   else begin
      Reply(104);
   end
   if (v13_water_delivered and (dude_item_count(PID_WATER_CHIP) == 0)) then begin
      NOption(105, FishrMan04, 4);
   end
   NOption(106, FishrMan05, 7);
   NOption(107, FishrMan06, 4);
   NOption(108, FishrMan07, 4);
   if (has_rep_berserker) then begin
      BOption(109, FishrMan08, 4);
   end
   NLowOption(110, FishrMan09);
end

procedure FishrMan02 begin
   known := 1;
   if (dude_is_male) then begin
      Reply(111);
   end
   else begin
      Reply(112);
   end
   if (v13_water_delivered and (dude_item_count(PID_WATER_CHIP) == 0)) then begin
      NOption(105, FishrMan04, 4);
   end
   NOption(106, FishrMan05, 7);
   NOption(108, FishrMan07, 4);
   NOption(113, FishrMan13, 4);
   NLowOption(110, FishrMan14);
end

procedure FishrMan03 begin
   Reply(114);
   BOption(115, FishrMan15, 4);
   NOption(116, FishrMan16, 4);
   NOption(117, FishrMan03a, 4);
   NLowOption(110, FishrMan19);
end

procedure FishrMan03a begin
   if (dude_charisma >= 6) then begin
      call FishrMan17;
   end
   else begin
      call FishrMan18;
   end
end

procedure FishrMan04 begin
   Reply(118);
   NOption(g_more, FishrMan04a, 1);
end

procedure FishrMan04a begin
   Reply(119);
   NOption(g_more, FishrMan04b, 1);
end

procedure FishrMan04b begin
   Reply(120);
   NOption(g_more, FishrManEnd1, 1);
end

procedure FishrMan05 begin
   Reply(122);
   NOption(g_more, FishrMan05a, 1);
end

procedure FishrMan05a begin
   Reply(123);
   NOption(g_more, FishrManEnd1, 1);
end

procedure FishrMan06 begin
   Reply(124);
   NOption(g_more, FishrManEnd1, 1);
end

procedure FishrMan07 begin
   Reply(125);
   NOption(g_more, FishrMan07a, 1);
end

procedure FishrMan07a begin
   Reply(126);
   NOption(g_more, FishrManEnd1, 1);
end

procedure FishrMan08 begin
   DownReactLevel
   DownReactLevel
   Reply(127);
   BOption(128, FishrMan08a, 4);
   BOption(129, FishrManCombat, 4);
   NOption(130, FishrMan22, 4);
end

procedure FishrMan08a begin
   if ((dude_strength >= 8) or dude_item_count(PID_FLAMER) or dude_item_count(PID_MINIGUN) or dude_item_count(PID_ROCKET_LAUNCHER) or dude_item_count(PID_LASER_RIFLE) or dude_item_count(PID_PLASMA_RIFLE)) then begin
      call FishrMan20;
   end
   else begin
      call FishrMan21;
   end
end

procedure FishrMan09 begin
   Reply(131 + (dude_is_female));
   NOption(g_more, FishrMan09a, 1);
end

procedure FishrMan09a begin
   variable LVar0 := 0;
   if (self_item_count(PID_RAD_X)) then begin
      LVar0 := self_item(PID_RAD_X);
      rm_obj_from_inven(self_obj, LVar0);
      add_obj_to_inven(dude_obj, LVar0);
      NMessage(133);
   end
   else begin
      NMessage(134);
   end
end

procedure FishrMan10 begin
   Reply(135);
   NOption(g_more, FishrManEnd2, 1);
end

procedure FishrMan11 begin
   Reply(137);
   NOption(g_more, FishrManEnd2, 1);
end

procedure FishrMan12 begin
   Reply(138);
   NOption(g_more, FishrMan12a, 1);
end

procedure FishrMan12a begin
   Reply(139);
   NOption(g_more, FishrManEnd2, 1);
end

procedure FishrMan13 begin
   Reply(140);
   call FishrManBarter;
end

procedure FishrMan14 begin
   Reply(141);
   NOption(g_more, FishrManEnd2, 1);
end

procedure FishrMan15 begin
   Reply(142);
   NOption(g_more, FishrMan15a, 1);
end

procedure FishrMan15a begin
   NMessage(143);
end

procedure FishrMan16 begin
   NMessage(144);
end

procedure FishrMan17 begin
   Reply(145);
   if (v13_water_delivered and (dude_item_count(PID_WATER_CHIP) == 0)) then begin
      NOption(146, FishrMan04, 4);
   end
   NOption(147, FishrMan11, 4);
   NOption(148, FishrMan23, 4);
   NOption(149, FishrMan24, 4);
   NOption(108, FishrMan07, 4);
end

procedure FishrMan18 begin
   NMessage(150);
end

procedure FishrMan19 begin
   NMessage(151);
end

procedure FishrMan20 begin
   Reply(152);
   call FishrManBarter;
end

procedure FishrMan21 begin
   BMessage(153);
   call FishrManCombat;
end

procedure FishrMan22 begin
   BMessage(154);
end

procedure FishrMan23 begin
   NMessage(155);
end

procedure FishrMan24 begin
   NMessage(156);
end

procedure FishrMan25 begin
   float_msg(self_obj, mstr(157), FLOAT_MSG_NORMAL);
end

procedure FishrManBarter begin
   gdialog_mod_barter(0);
   giq_option(0, SCRIPT_MODREACT, 100, FishrManEnd, NEUTRAL_REACTION);
end

procedure FishrManCombat begin
   tmp_hostile := 1;
   set_global_var(GVAR_ENEMY_RANDOM_ENC, 1);
end

procedure FishrManEnd begin
end

procedure FishrManEnd1 begin
   NMessage(121);
end

procedure FishrManEnd2 begin
   NMessage(136);
end
